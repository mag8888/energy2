import React, { useState } from 'react';
import {
  Box,
  Typography,
  Grid,
  Card,
  CardContent,
  CardActions,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Chip,
  Avatar,
  Divider
} from '@mui/material';
import {
  Work as WorkIcon,
  AttachMoney as MoneyIcon,
  TrendingUp as TrendingUpIcon,
  Info as InfoIcon
} from '@mui/icons-material';

// –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
const PROFESSIONS = [
  {
    id: 1,
    name: '–î–≤–æ—Ä–Ω–∏–∫',
    salary: 2000,
    expenses: 200,
    balance: 2000,
    passiveIncome: 0,
    description: '–£–±–æ—Ä–∫–∞ —É–ª–∏—Ü –∏ –¥–≤–æ—Ä–æ–≤',
    detailedDescription: '–†–∞–±–æ—Ç–∞ –¥–≤–æ—Ä–Ω–∏–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —É–±–æ—Ä–∫—É —É–ª–∏—Ü, –¥–≤–æ—Ä–æ–≤, –ø–∞—Ä–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç. –≠—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≥—Ä–∞—Ñ–∏–∫–æ–º, –Ω–æ –Ω–∏–∑–∫–∏–º –¥–æ—Ö–æ–¥–æ–º.',
    pros: ['–°—Ç–∞–±–∏–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫', '–ù–µ —Ç—Ä–µ–±—É–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è', '–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'],
    cons: ['–ù–∏–∑–∫–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞', '–¢—è–∂–µ–ª–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞', '–†–∞–±–æ—Ç–∞ –Ω–∞ —É–ª–∏—Ü–µ –≤ –ª—é–±—É—é –ø–æ–≥–æ–¥—É'],
    requirements: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å',
    growth: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –±—Ä–∏–≥–∞–¥–∏—Ä–æ–º –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ –ñ–ö–•'
  },
  {
    id: 2,
    name: '–ö—É—Ä—å–µ—Ä',
    salary: 2500,
    expenses: 300,
    balance: 2500,
    passiveIncome: 0,
    description: '–î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
    detailedDescription: '–ö—É—Ä—å–µ—Ä –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä—ã, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –ø–æ—Å—ã–ª–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞–º. –†–∞–±–æ—Ç–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º –∏ –æ–±—â–µ–Ω–∏–µ–º —Å –ª—é–¥—å–º–∏.',
    pros: ['–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫', '–û–±—â–µ–Ω–∏–µ —Å –ª—é–¥—å–º–∏', '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞'],
    cons: ['–ù–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–π –¥–æ—Ö–æ–¥', '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –ø–æ–≥–æ–¥—ã', '–§–∏–∑–∏—á–µ—Å–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞'],
    requirements: '–•–æ—Ä–æ—à–µ–µ –∑–Ω–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å',
    growth: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ –ª–æ–≥–∏—Å—Ç–∏–∫–µ –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–µ –¥–µ–ª–æ'
  },
  {
    id: 3,
    name: '–í–æ–¥–∏—Ç–µ–ª—å',
    salary: 3000,
    expenses: 400,
    balance: 3000,
    passiveIncome: 0,
    description: '–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∏–ª–∏ –≥—Ä—É–∑–æ–≤',
    detailedDescription: '–í–æ–¥–∏—Ç–µ–ª—å –ø–µ—Ä–µ–≤–æ–∑–∏—Ç –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –Ω–∞ —Ç–∞–∫—Å–∏ –∏–ª–∏ –≥—Ä—É–∑—ã –Ω–∞ –≥—Ä—É–∑–æ–≤–∏–∫–µ. –¢—Ä–µ–±—É–µ—Ç –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤ –∏ —Ö–æ—Ä–æ—à–µ–≥–æ –∑–Ω–∞–Ω–∏—è –ü–î–î.',
    pros: ['–î–æ—Å—Ç–æ–π–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞', '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫', '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Å–µ–±—è'],
    cons: ['–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–ú–æ–Ω–æ—Ç–æ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞', '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞'],
    requirements: '–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∞, –æ–ø—ã—Ç –≤–æ–∂–¥–µ–Ω–∏—è',
    growth: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å'
  },
  {
    id: 4,
    name: '–ü—Ä–æ–¥–∞–≤–µ—Ü',
    salary: 2800,
    expenses: 350,
    balance: 2800,
    passiveIncome: 0,
    description: '–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ',
    detailedDescription: '–ü—Ä–æ–¥–∞–≤–µ—Ü –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π, –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∫–∞—Å—Å–æ–π. –¢—Ä–µ–±—É–µ—Ç –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∑–Ω–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.',
    pros: ['–°—Ç–∞–±–∏–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫', '–†–∞–∑–≤–∏—Ç–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤', '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞'],
    cons: ['–†–∞–±–æ—Ç–∞ –Ω–∞ –Ω–æ–≥–∞—Ö', '–û–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –ª—é–¥—å–º–∏', '–ú–æ–Ω–æ—Ç–æ–Ω–Ω–æ—Å—Ç—å'],
    requirements: '–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å, –∑–Ω–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –ª—é–¥—å–º–∏',
    growth: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –º–∞–≥–∞–∑–∏–Ω'
  },
  {
    id: 5,
    name: '–û—Ñ–∏—Ü–∏–∞–Ω—Ç',
    salary: 2200,
    expenses: 250,
    balance: 2200,
    passiveIncome: 0,
    description: '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ',
    detailedDescription: '–û—Ñ–∏—Ü–∏–∞–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑—ã, –ø–æ–¥–∞–µ—Ç –±–ª—é–¥–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ–º—Ñ–æ—Ä—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π. –†–∞–±–æ—Ç–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –æ–±—â–µ–Ω–∏–µ–º –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.',
    pros: ['–ß–∞–µ–≤—ã–µ', '–†–∞–∑–≤–∏—Ç–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤', '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫'],
    cons: ['–†–∞–±–æ—Ç–∞ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ', '–§–∏–∑–∏—á–µ—Å–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞', '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Å–µ–∑–æ–Ω–∞'],
    requirements: '–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å, –∑–Ω–∞–Ω–∏–µ –º–µ–Ω—é',
    growth: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ'
  },
  {
    id: 6,
    name: '–£—á–∏—Ç–µ–ª—å',
    salary: 3500,
    expenses: 500,
    balance: 3500,
    passiveIncome: 0,
    description: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ –≤ —à–∫–æ–ª–µ –∏–ª–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ',
    detailedDescription: '–£—á–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥–∞–µ—Ç –∑–Ω–∞–Ω–∏—è —É—á–µ–Ω–∏–∫–∞–º, –≥–æ—Ç–æ–≤–∏—Ç —É—Ä–æ–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—ã. –¢—Ä–µ–±—É–µ—Ç –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ –ª—é–±–≤–∏ –∫ –¥–µ—Ç—è–º.',
    pros: ['–í—ã—Å–æ–∫–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞', '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å', '–î–ª–∏–Ω–Ω—ã–µ –∫–∞–Ω–∏–∫—É–ª—ã'],
    cons: ['–í—ã—Å–æ–∫–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞', '–ú–Ω–æ–≥–æ –±—É–º–∞–∂–Ω–æ–π —Ä–∞–±–æ—Ç—ã'],
    requirements: '–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –ª—é–±–æ–≤—å –∫ –¥–µ—Ç—è–º, —Ç–µ—Ä–ø–µ–Ω–∏–µ',
    growth: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –∑–∞–≤—É—á–µ–º, –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Å—Ç–Ω—É—é —à–∫–æ–ª—É'
  }
];

const ProfessionSelector = ({ onProfessionSelect, selectedProfession, isObligatory = false }) => {
  const [selectedProfessionDetail, setSelectedProfessionDetail] = useState(null);
  const [detailDialogOpen, setDetailDialogOpen] = useState(false);

  const handleProfessionSelect = (profession) => {
    if (isObligatory) {
      // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è –≤—Å–µ—Ö, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
      setSelectedProfessionDetail(profession);
      setDetailDialogOpen(true);
    } else {
      // –ï—Å–ª–∏ –∫–∞–∂–¥—ã–π –≤—ã–±–∏—Ä–∞–µ—Ç —Å–≤–æ—é, —Å—Ä–∞–∑—É –≤—ã–±–∏—Ä–∞–µ–º
      onProfessionSelect(profession);
    }
  };

  const handleConfirmProfession = () => {
    if (selectedProfessionDetail) {
      onProfessionSelect(selectedProfessionDetail);
      setDetailDialogOpen(false);
      setSelectedProfessionDetail(null);
    }
  };

  const formatMoney = (amount) => {
    return `$${amount.toLocaleString()}`;
  };

  return (
    <Box>
      <Typography variant="h5" gutterBottom align="center" sx={{ mb: 3 }}>
        {isObligatory ? 'üè¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤' : 'üë§ –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é'}
      </Typography>
      
      {isObligatory && (
        <Typography variant="body1" color="text.secondary" align="center" sx={{ mb: 3 }}>
          –≠—Ç–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º –≤ –∫–æ–º–Ω–∞—Ç–µ
        </Typography>
      )}

      <Grid container spacing={3}>
        {PROFESSIONS.map((profession) => (
          <Grid item xs={12} sm={6} md={4} key={profession.id}>
            <Card 
              sx={{ 
                height: '100%',
                cursor: 'pointer',
                '&:hover': { boxShadow: 4 },
                border: selectedProfession?.id === profession.id ? '2px solid #1976d2' : '1px solid #e0e0e0'
              }}
              onClick={() => handleProfessionSelect(profession)}
            >
              <CardContent>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>
                    <WorkIcon />
                  </Avatar>
                  <Box>
                    <Typography variant="h6" component="div" sx={{ fontWeight: 'bold' }}>
                      {profession.name}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      {profession.description}
                    </Typography>
                  </Box>
                </Box>

                <Divider sx={{ my: 2 }} />

                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                  <Typography variant="body2" color="text.secondary">
                    –ó–∞—Ä–ø–ª–∞—Ç–∞:
                  </Typography>
                  <Typography variant="body2" sx={{ fontWeight: 'bold', color: 'success.main' }}>
                    {formatMoney(profession.salary)}/–º–µ—Å
                  </Typography>
                </Box>

                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                  <Typography variant="body2" color="text.secondary">
                    –†–∞—Å—Ö–æ–¥—ã:
                  </Typography>
                  <Typography variant="body2" sx={{ fontWeight: 'bold', color: 'error.main' }}>
                    {formatMoney(profession.expenses)}/–º–µ—Å
                  </Typography>
                </Box>

                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>
                  <Typography variant="body2" color="text.secondary">
                    –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å:
                  </Typography>
                  <Typography variant="body2" sx={{ fontWeight: 'bold' }}>
                    {formatMoney(profession.balance)}
                  </Typography>
                </Box>

                <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>
                  <Chip 
                    label={`+${formatMoney(profession.salary - profession.expenses)}/–º–µ—Å`}
                    color="success"
                    size="small"
                    icon={<TrendingUpIcon />}
                  />
                  {profession.passiveIncome > 0 && (
                    <Chip 
                      label={`–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥: ${formatMoney(profession.passiveIncome)}`}
                      color="info"
                      size="small"
                      icon={<MoneyIcon />}
                    />
                  )}
                </Box>
              </CardContent>

              <CardActions>
                <Button
                  size="small"
                  startIcon={<InfoIcon />}
                  onClick={(e) => {
                    e.stopPropagation();
                    setSelectedProfessionDetail(profession);
                    setDetailDialogOpen(true);
                  }}
                >
                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </Button>
              </CardActions>
            </Card>
          </Grid>
        ))}
      </Grid>

      {/* –î–∏–∞–ª–æ–≥ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ */}
      <Dialog 
        open={detailDialogOpen} 
        onClose={() => setDetailDialogOpen(false)}
        maxWidth="md"
        fullWidth
      >
        {selectedProfessionDetail && (
          <>
            <DialogTitle>
              <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>
                  <WorkIcon />
                </Avatar>
                <Typography variant="h6">
                  {selectedProfessionDetail.name}
                </Typography>
              </Box>
            </DialogTitle>
            
            <DialogContent>
              <Typography variant="body1" paragraph>
                {selectedProfessionDetail.detailedDescription}
              </Typography>

              <Grid container spacing={3}>
                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom color="success.main">
                    ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
                  </Typography>
                  <Box component="ul" sx={{ pl: 2 }}>
                    {selectedProfessionDetail.pros.map((pro, index) => (
                      <Typography component="li" key={index} variant="body2" sx={{ mb: 1 }}>
                        {pro}
                      </Typography>
                    ))}
                  </Box>
                </Grid>

                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom color="error.main">
                    ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏
                  </Typography>
                  <Box component="ul" sx={{ pl: 2 }}>
                    {selectedProfessionDetail.cons.map((con, index) => (
                      <Typography component="li" key={index} variant="body2" sx={{ mb: 1 }}>
                        {con}
                      </Typography>
                    ))}
                  </Box>
                </Grid>
              </Grid>

              <Divider sx={{ my: 3 }} />

              <Grid container spacing={3}>
                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom>
                    üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
                  </Typography>
                  <Typography variant="body2" paragraph>
                    {selectedProfessionDetail.requirements}
                  </Typography>
                </Grid>

                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom>
                    üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞
                  </Typography>
                  <Typography variant="body2" paragraph>
                    {selectedProfessionDetail.growth}
                  </Typography>
                </Grid>
              </Grid>

              <Divider sx={{ my: 3 }} />

              <Box sx={{ bgcolor: 'grey.50', p: 2, borderRadius: 1 }}>
                <Typography variant="h6" gutterBottom>
                  üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
                </Typography>
                <Grid container spacing={2}>
                  <Grid item xs={6}>
                    <Typography variant="body2" color="text.secondary">
                      –ó–∞—Ä–ø–ª–∞—Ç–∞
                    </Typography>
                    <Typography variant="h6" color="success.main">
                      {formatMoney(selectedProfessionDetail.salary)}/–º–µ—Å
                    </Typography>
                  </Grid>
                  <Grid item xs={6}>
                    <Typography variant="body2" color="text.secondary">
                      –†–∞—Å—Ö–æ–¥—ã
                    </Typography>
                    <Typography variant="h6" color="error.main">
                      {formatMoney(selectedProfessionDetail.expenses)}/–º–µ—Å
                    </Typography>
                  </Grid>
                  <Grid item xs={6}>
                    <Typography variant="body2" color="text.secondary">
                      –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
                    </Typography>
                    <Typography variant="h6">
                      {formatMoney(selectedProfessionDetail.balance)}
                    </Typography>
                  </Grid>
                  <Grid item xs={6}>
                    <Typography variant="body2" color="text.secondary">
                      –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥
                    </Typography>
                    <Typography variant="h6" color="success.main">
                      {formatMoney(selectedProfessionDetail.salary - selectedProfessionDetail.expenses)}/–º–µ—Å
                    </Typography>
                  </Grid>
                </Grid>
              </Box>
            </DialogContent>

            <DialogActions>
              <Button onClick={() => setDetailDialogOpen(false)}>
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
              {isObligatory && (
                <Button 
                  onClick={handleConfirmProfession}
                  variant="contained"
                  startIcon={<WorkIcon />}
                >
                  –í—ã–±—Ä–∞—Ç—å —ç—Ç—É –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –≤—Å–µ—Ö
                </Button>
              )}
            </DialogActions>
          </>
        )}
      </Dialog>
    </Box>
  );
};

export default ProfessionSelector;
