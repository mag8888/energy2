import React, { useState } from 'react';
import {
  Box,
  Typography,
  TextField,
  Button,
  Alert,
  Paper,
  InputAdornment
} from '@mui/material';
import {
  Email,
  ArrowBack,
  CheckCircle,
  Error
} from '@mui/icons-material';
import { motion } from 'framer-motion';
import { colors, textColors, buttonStyles, inputStyles, containerStyles, typographyStyles } from '../styles/component-styles.js';


const UserRegistration = ({ onRegister, onLogin, onBack }) => {
  const [formData, setFormData] = useState({
    email: ''
  });
  const [errors, setErrors] = useState({});
  const [isLoading, setIsLoading] = useState(false);
  const [message, setMessage] = useState({ type: '', text: '' });

  // –í–∞–ª–∏–¥–∞—Ü–∏—è email
  const validateEmail = (email) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!email) return 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
    if (!emailRegex.test(email)) return '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email';
    return '';
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π
  const handleInputChange = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: '' }));
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    const emailError = validateEmail(formData.email);
    if (emailError) {
      setErrors({ email: emailError });
      return;
    }

    setIsLoading(true);
    setMessage({ type: '', text: '' });

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º
      const testAccounts = ['romeoproo1@gmail.com', 'xqrmedia@gmail.com'];
      
      if (testAccounts.includes(formData.email)) {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ë–ï–ó –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
        const userData = {
          email: formData.email,
          username: formData.email.split('@')[0],
          displayId: Math.floor(Math.random() * 1000) + 100,
          isTestAccount: true
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        localStorage.setItem('testUser', JSON.stringify(userData));
        
        // –°—Ä–∞–∑—É –ª–æ–≥–∏–Ω–∏–º—Å—è
        if (onLogin) {
          onLogin(userData);
        }
      } else {
        // –î–ª—è –¥—Ä—É–≥–∏—Ö email - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        setMessage({
          type: 'info',
          text: '–≠—Ç–æ—Ç email –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã: romeoproo1@gmail.com –∏–ª–∏ xqrmedia@gmail.com'
        });
      }
    } catch (error) {
      setMessage({
        type: 'error',
        text: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ'
      });
    } finally {
      setIsLoading(false);
    }
  };



  return (
    <Box sx={{
      minHeight: '100vh',
      background: colors.roomSelection.background,
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      p: 4
    }}>
      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ */}
      <Paper
        component={motion.div}
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        elevation={8}
        sx={containerStyles.formContainer}
      >
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <Box sx={{ textAlign: 'center', mb: 4 }}>
            <Typography variant="h4" sx={{ 
              color: colors.primary.main, 
              fontWeight: 'bold',
              mb: 1
            }}>
              üéÆ –í—Ö–æ–¥ –≤ –∏–≥—Ä—É CASHFLOW
            </Typography>
            <Typography variant="body1" sx={{ color: textColors.secondary }}>
              –í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É
            </Typography>
          </Box>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö */}
          <Box sx={{ 
            mb: 3, 
            p: 2, 
            bgcolor: colors.primary.light, 
            borderRadius: 2,
            border: `1px solid ${colors.primary.main}`
          }}>
            <Typography variant="body2" sx={{ color: textColors.secondary, textAlign: 'center' }}>
              üí° <strong>–¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:</strong><br/>
              ‚Ä¢ romeoproo1@gmail.com<br/>
              ‚Ä¢ xqrmedia@gmail.com
            </Typography>
          </Box>

          {/* –§–æ—Ä–º–∞ */}
          <Box component="form" onSubmit={handleSubmit} sx={{ mb: 3 }}>
            {/* Email */}
            <TextField
              fullWidth
              label="Email"
              type="email"
              value={formData.email}
              onChange={(e) => handleInputChange('email', e.target.value)}
              error={!!errors.email}
              helperText={errors.email}
              sx={{
                ...inputStyles.primary,
                mb: 3
              }}
              InputProps={{
                startAdornment: (
                  <InputAdornment position="start">
                    <Email sx={{ color: colors.primary.main }} />
                  </InputAdornment>
                ),
              }}
            />

            {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
            {message.text && (
              <Alert 
                severity={message.type} 
                sx={{ mb: 3 }}
                icon={message.type === 'success' ? <CheckCircle /> : <Error />}
              >
                {message.text}
              </Alert>
            )}

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <Button
              type="submit"
              fullWidth
              variant="contained"
              disabled={isLoading}
              sx={{
                ...buttonStyles.primary,
                py: 1.5,
                fontSize: '1.1rem'
              }}
            >
              {isLoading ? '‚è≥ –í—Ö–æ–¥...' : 'üéÆ –í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É'}
            </Button>
          </Box>

          {/* –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤ - —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –≤—Ö–æ–¥ */}
          
          {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
          <Box sx={{ mt: 2, textAlign: 'center' }}>
            <Typography variant="body2" sx={{ color: textColors.secondary, fontSize: '0.9rem' }}>
              üí° –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ email –∏ –Ω–∞–∂–º–∏—Ç–µ "–í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É"
            </Typography>
          </Box>

          {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
          {onBack && (
            <Button
              fullWidth
              variant="text"
              onClick={onBack}
              startIcon={<ArrowBack />}
              sx={{
                mt: 2,
                color: textColors.secondary,
                '&:hover': {
                  bgcolor: colors.primary.light
                }
              }}
            >
              ‚Üê –ù–∞–∑–∞–¥
            </Button>
          )}
        </Paper>
      </Box>
    );
  };

export default UserRegistration;
