import React from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  Chip,
  Grid,
  Card,
  CardContent,
  Divider
} from '@mui/material';
import {
  Business as BusinessIcon,
  Home as HomeIcon,
  TrendingUp as StockIcon,
  AccountBalance as BondIcon,
  CurrencyBitcoin as CryptoIcon,
  Diamond as PreciousMetalIcon,
  Collections as CollectibleIcon,
  Store as FranchiseIcon,
  Copyright as PatentIcon,
  Security as InsuranceIcon,
  School as EducationIcon
} from '@mui/icons-material';

const FastTrackCellModal = ({ open, onClose, cellData }) => {
  if (!cellData || !cellData.data) {
    return null;
  }

  const asset = cellData.data;
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –ø–æ —Ç–∏–ø—É –∞–∫—Ç–∏–≤–∞
  const getAssetIcon = (type) => {
    switch (type) {
      case 'business':
        return <BusinessIcon />;
      case 'real_estate':
        return <HomeIcon />;
      case 'stock':
        return <StockIcon />;
      case 'bond':
        return <BondIcon />;
      case 'cryptocurrency':
        return <CryptoIcon />;
      case 'precious_metal':
        return <PreciousMetalIcon />;
      case 'collectible':
        return <CollectibleIcon />;
      case 'franchise':
        return <FranchiseIcon />;
      case 'patent':
        return <PatentIcon />;
      case 'insurance':
        return <InsuranceIcon />;
      case 'education':
        return <EducationIcon />;
      default:
        return <BusinessIcon />;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –ø–æ —Ç–∏–ø—É –∞–∫—Ç–∏–≤–∞
  const getAssetColor = (type) => {
    switch (type) {
      case 'business':
        return 'primary';
      case 'real_estate':
        return 'success';
      case 'stock':
        return 'info';
      case 'bond':
        return 'secondary';
      case 'cryptocurrency':
        return 'warning';
      case 'precious_metal':
        return 'default';
      case 'collectible':
        return 'error';
      case 'franchise':
        return 'primary';
      case 'patent':
        return 'info';
      case 'insurance':
        return 'success';
      case 'education':
        return 'secondary';
      default:
        return 'primary';
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –ø–æ —É—Ä–æ–≤–Ω—é —Ä–∏—Å–∫–∞
  const getRiskColor = (risk) => {
    switch (risk) {
      case 'very_low':
        return 'success';
      case 'low':
        return 'success';
      case 'medium':
        return 'warning';
      case 'high':
        return 'error';
      case 'very_high':
        return 'error';
      default:
        return 'default';
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã
  const formatPrice = (price) => {
    if (price >= 1000000) {
      return `$${(price / 1000000).toFixed(1)}M`;
    } else if (price >= 1000) {
      return `$${(price / 1000).toFixed(1)}K`;
    } else {
      return `$${price}`;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Å—è—á–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
  const formatMonthlyIncome = (income) => {
    if (income >= 1000) {
      return `$${(income / 1000).toFixed(1)}K/–º–µ—Å`;
    } else {
      return `$${income}/–º–µ—Å`;
    }
  };

  return (
    <Dialog 
      open={open} 
      onClose={onClose}
      maxWidth="md"
      fullWidth
    >
      <DialogTitle>
        <Box display="flex" alignItems="center" gap={2}>
          {getAssetIcon(asset.type)}
          <Typography variant="h5" component="span">
            {asset.name}
          </Typography>
          <Chip 
            label={asset.type.replace('_', ' ').toUpperCase()} 
            color={getAssetColor(asset.type)}
            size="small"
          />
        </Box>
      </DialogTitle>
      
      <DialogContent>
        <Typography variant="body1" color="text.secondary" paragraph>
          {asset.description}
        </Typography>

        <Divider sx={{ my: 2 }} />

        <Grid container spacing={3}>
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <Grid item xs={12} md={6}>
            <Card variant="outlined">
              <CardContent>
                <Typography variant="h6" gutterBottom>
                  üí∞ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                </Typography>
                
                <Box display="flex" justifyContent="space-between" mb={1}>
                  <Typography variant="body2">–°—Ç–æ–∏–º–æ—Å—Ç—å:</Typography>
                  <Typography variant="body2" fontWeight="bold" color="primary">
                    {formatPrice(asset.cost)}
                  </Typography>
                </Box>
                
                {asset.monthlyIncome > 0 && (
                  <Box display="flex" justifyContent="space-between" mb={1}>
                    <Typography variant="body2">–ú–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥:</Typography>
                    <Typography variant="body2" fontWeight="bold" color="success.main">
                      {formatMonthlyIncome(asset.monthlyIncome)}
                    </Typography>
                  </Box>
                )}
                
                {asset.downPayment && (
                  <Box display="flex" justifyContent="space-between" mb={1}>
                    <Typography variant="body2">–ü–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å:</Typography>
                    <Typography variant="body2" fontWeight="bold" color="warning.main">
                      {formatPrice(asset.downPayment)}
                    </Typography>
                  </Box>
                )}
                
                {asset.risk && (
                  <Box display="flex" justifyContent="space-between" mb={1}>
                    <Typography variant="body2">–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:</Typography>
                    <Chip 
                      label={asset.risk.replace('_', ' ').toUpperCase()} 
                      color={getRiskColor(asset.risk)}
                      size="small"
                    />
                  </Box>
                )}
              </CardContent>
            </Card>
          </Grid>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <Grid item xs={12} md={6}>
            <Card variant="outlined">
              <CardContent>
                <Typography variant="h6" gutterBottom>
                  üìä –î–µ—Ç–∞–ª–∏ –∞–∫—Ç–∏–≤–∞
                </Typography>
                
                <Box display="flex" justifyContent="space-between" mb={1}>
                  <Typography variant="body2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</Typography>
                  <Typography variant="body2" fontWeight="bold">
                    {asset.category?.replace('_', ' ').toUpperCase() || '–ù/–î'}
                  </Typography>
                </Box>
                
                {asset.maturity && (
                  <Box display="flex" justifyContent="space-between" mb={1}>
                    <Typography variant="body2">–°—Ä–æ–∫ –ø–æ–≥–∞—à–µ–Ω–∏—è:</Typography>
                    <Typography variant="body2" fontWeight="bold">
                      {asset.maturity.replace('_', ' ')}
                    </Typography>
                  </Box>
                )}
                
                {/* –†–∞—Å—á–µ—Ç ROI */}
                {asset.monthlyIncome > 0 && asset.cost > 0 && (
                  <Box display="flex" justifyContent="space-between" mb={1}>
                    <Typography variant="body2">–ì–æ–¥–æ–≤–æ–π ROI:</Typography>
                    <Typography variant="body2" fontWeight="bold" color="success.main">
                      {((asset.monthlyIncome * 12 / asset.cost) * 100).toFixed(1)}%
                    </Typography>
                  </Box>
                )}
              </CardContent>
            </Card>
          </Grid>
        </Grid>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ */}
        {asset.type === 'real_estate' && (
          <Box mt={3}>
            <Card variant="outlined">
              <CardContent>
                <Typography variant="h6" gutterBottom>
                  üè† –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–µ—Å—Ç–∏ –ø–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å –≤ —Ä–∞–∑–º–µ—Ä–µ {asset.downPayment ? formatPrice(asset.downPayment) : '20% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏'}. 
                  –û—Å—Ç–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ –∏–ø–æ—Ç–µ—á–Ω—ã–π –∫—Ä–µ–¥–∏—Ç.
                </Typography>
              </CardContent>
            </Card>
          </Box>
        )}

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∞–∫—Ü–∏–π */}
        {asset.type === 'stock' && (
          <Box mt={3}>
            <Card variant="outlined">
              <CardContent>
                <Typography variant="h6" gutterBottom>
                  üìà –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∞–∫—Ü–∏–π
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  –ê–∫—Ü–∏–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –∫–∞–∫ –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—ã–π –¥–æ—Ö–æ–¥, —Ç–∞–∫ –∏ –¥–æ—Ö–æ–¥ –æ—Ç —Ä–æ—Å—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏. 
                  –¶–µ–Ω—ã –Ω–∞ –∞–∫—Ü–∏–∏ –º–æ–≥—É—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –∫–æ–ª–µ–±–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.
                </Typography>
              </CardContent>
            </Card>
          </Box>
        )}

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç */}
        {asset.type === 'cryptocurrency' && (
          <Box mt={3}>
            <Card variant="outlined">
              <CardContent>
                <Typography variant="h6" gutterBottom>
                  ü™ô –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã —è–≤–ª—è—é—Ç—Å—è –≤—ã—Å–æ–∫–æ—Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏ —Å –≤—ã—Å–æ–∫–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å—é. 
                  –¶–µ–Ω—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –Ω–∞ –¥–µ—Å—è—Ç–∫–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –¥–Ω—è.
                </Typography>
              </CardContent>
            </Card>
          </Box>
        )}
      </DialogContent>
      
      <DialogActions>
        <Button onClick={onClose} color="primary">
          –ó–∞–∫—Ä—ã—Ç—å
        </Button>
        <Button 
          variant="contained" 
          color="primary"
          onClick={() => {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–∫—É–ø–∫–∏ –∞–∫—Ç–∏–≤–∞
            console.log('–ü–æ–∫—É–ø–∫–∞ –∞–∫—Ç–∏–≤–∞:', asset);
            onClose();
          }}
        >
          –ö—É–ø–∏—Ç—å –∑–∞ {formatPrice(asset.cost)}
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default FastTrackCellModal;
