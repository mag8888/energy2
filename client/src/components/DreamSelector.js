import React, { useState } from 'react';
import {
  Box,
  Typography,
  Grid,
  Card,
  CardContent,
  CardActions,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Chip,
  Avatar,
  Divider
} from '@mui/material';
import {
  Favorite as HeartIcon,
  Star as StarIcon,
  Info as InfoIcon,
  Home as HomeIcon,
  Flight as FlightIcon,
  Business as BusinessIcon,
  School as SchoolIcon,
  SportsEsports as GameIcon
} from '@mui/icons-material';

// –°–ø–∏—Å–æ–∫ –º–µ—á—Ç
const DREAMS = [
  {
    id: 1,
    name: '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º –º–µ—á—Ç—ã',
    description: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–º —Å —Å–∞–¥–æ–º –∏ –±–∞—Å—Å–µ–π–Ω–æ–º',
    detailedDescription: '–ú–µ—á—Ç–∞ –æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –¥–æ–º–µ - —ç—Ç–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏, –∫–æ–º—Ñ–æ—Ä—Ç—É –∏ —Å–æ–∑–¥–∞–Ω–∏—é —Å–µ–º–µ–π–Ω–æ–≥–æ –≥–Ω–µ–∑–¥–∞. –î–æ–º –º–µ—á—Ç—ã –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è –≤—Å–µ, —á—Ç–æ –≤—ã –≤—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∏: –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∫—É—Ö–Ω—é, —É—é—Ç–Ω—É—é –≥–æ—Å—Ç–∏–Ω—É—é, –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –¥–µ—Ç—Å–∫–∏–µ –∫–æ–º–Ω–∞—Ç—ã, —Å–∞–¥ —Å —Ñ—Ä—É–∫—Ç–æ–≤—ã–º–∏ –¥–µ—Ä–µ–≤—å—è–º–∏, –±–∞—Å—Å–µ–π–Ω, –≥–∞—Ä–∞–∂ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—à–∏–Ω.',
    category: '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
    estimatedCost: 500000,
    monthlyIncome: 0,
    icon: <HomeIcon />,
    pros: ['–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ—Ç—è–º', '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –≤ –±—É–¥—É—â–µ–µ', '–õ–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ'],
    cons: ['–í—ã—Å–æ–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –Ω–∞–ª–æ–≥–∏', '–ü—Ä–∏–≤—è–∑–∫–∞ –∫ –º–µ—Å—Ç—É', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ'],
    requirements: '–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥, —Ö–æ—Ä–æ—à–∞—è –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è',
    timeline: '5-10 –ª–µ—Ç –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞'
  },
  {
    id: 2,
    name: '–ü–æ—Å–µ—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç—ã',
    description: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É',
    detailedDescription: '–ú–µ—á—Ç–∞ –æ –∫—Ä—É–≥–æ—Å–≤–µ—Ç–Ω–æ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ - —ç—Ç–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –ø–æ–∑–Ω–∞–Ω–∏—é –º–∏—Ä–∞, –Ω–æ–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä, —Ç—Ä–∞–¥–∏—Ü–∏–π –∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≤—Å–µ–º –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–º –ø–æ–∑–≤–æ–ª–∏—Ç —É–≤–∏–¥–µ—Ç—å —Å–∞–º—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ –º–µ—Å—Ç–∞ –ø–ª–∞–Ω–µ—Ç—ã, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞—Ä–æ–¥–∞–º–∏ –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∫—Ä—É–≥–æ–∑–æ—Ä.',
    category: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
    estimatedCost: 100000,
    monthlyIncome: 0,
    icon: <FlightIcon />,
    pros: ['–ù–æ–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –∏ —ç–º–æ—Ü–∏–∏', '–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫—Ä—É–≥–æ–∑–æ—Ä–∞', '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –∫—É–ª—å—Ç—É—Ä–∞–º–∏', '–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å'],
    cons: ['–í—ã—Å–æ–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', '–í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã', '–†–∏—Å–∫–∏ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö', '–ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –Ω–æ–≤—ã–º —É—Å–ª–æ–≤–∏—è–º'],
    requirements: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞, –≤—Ä–µ–º—è, —Ö–æ—Ä–æ—à–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ, –∑–Ω–∞–Ω–∏–µ —è–∑—ã–∫–æ–≤',
    timeline: '1-2 –≥–æ–¥–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏'
  },
  {
    id: 3,
    name: '–û—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å',
    description: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–µ–ª–æ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å',
    detailedDescription: '–ú–µ—á—Ç–∞ –æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –±–∏–∑–Ω–µ—Å–µ - —ç—Ç–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—é —á–µ–≥–æ-—Ç–æ –∑–Ω–∞—á–∏–º–æ–≥–æ. –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–µ–ª–æ –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Å–µ–±—è, –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ —Å—Ç—Ä–æ–∏—Ç—å –±—É–¥—É—â–µ–µ –ø–æ —Å–≤–æ–∏–º –ø—Ä–∞–≤–∏–ª–∞–º.',
    category: '–ë–∏–∑–Ω–µ—Å',
    estimatedCost: 200000,
    monthlyIncome: 5000,
    icon: <BusinessIcon />,
    pros: ['–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å', '–°–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è', '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫', '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞'],
    cons: ['–í—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥', '–ú–Ω–æ–≥–æ —Ä–∞–±–æ—Ç—ã'],
    requirements: '–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω, —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª, –∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏, —É–ø–æ—Ä—Å—Ç–≤–æ',
    timeline: '3-5 –ª–µ—Ç –¥–ª—è —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞'
  },
  {
    id: 4,
    name: '–ü–æ–ª—É—á–∏—Ç—å –≤—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    description: '–†–∞–∑–≤–∏—Ç–∏–µ –∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç',
    detailedDescription: '–ú–µ—á—Ç–∞ –æ –≤—ã—Å—à–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ - —ç—Ç–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é, –ø–æ–ª—É—á–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –∑–Ω–∞–Ω–∏–π –∏ –Ω–∞–≤—ã–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤ –∫–∞—Ä—å–µ—Ä–µ –∏ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏. –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –ø–æ–≤—ã—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏.',
    category: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    estimatedCost: 50000,
    monthlyIncome: 1000,
    icon: <SchoolIcon />,
    pros: ['–ù–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –∏ –Ω–∞–≤—ã–∫–∏', '–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç', '–ü–æ–≤—ã—à–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç—ã', '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ'],
    cons: ['–í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã', '–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è', '–°–ª–æ–∂–Ω–æ—Å—Ç—å —Å–æ–≤–º–µ—â–µ–Ω–∏—è —Å —Ä–∞–±–æ—Ç–æ–π', '–ù–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —É—Å–ø–µ—Ö'],
    requirements: '–í—Ä–µ–º—è, –¥–µ–Ω—å–≥–∏, –∂–µ–ª–∞–Ω–∏–µ —É—á–∏—Ç—å—Å—è, –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è',
    timeline: '3-6 –ª–µ—Ç –æ–±—É—á–µ–Ω–∏—è'
  },
  {
    id: 5,
    name: '–°—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –≥–µ–π–º–µ—Ä–æ–º',
    description: '–ò–≥—Ä—ã –∫–∞–∫ –∫–∞—Ä—å–µ—Ä–∞ –∏ —Ö–æ–±–±–∏',
    detailedDescription: '–ú–µ—á—Ç–∞ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–∞—Ä—å–µ—Ä–µ –≤ –∏–≥—Ä–æ–≤–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –ª—é–±–∏–º–æ–µ —Ö–æ–±–±–∏ –≤ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–µ–π–º–∏–Ω–≥ –≤–∫–ª—é—á–∞–µ—Ç —É—á–∞—Å—Ç–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö, —Å—Ç—Ä–∏–º–∏–Ω–≥, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏–≥—Ä–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤.',
    category: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
    estimatedCost: 20000,
    monthlyIncome: 3000,
    icon: <GameIcon />,
    pros: ['–õ—é–±–∏–º–æ–µ –¥–µ–ª–æ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞', '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å', '–û–±—â–µ–Ω–∏–µ —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏', '–¢–≤–æ—Ä—á–µ—Å–∫–∞—è —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è'],
    cons: ['–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥', '–í—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è', '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º', '–ö–æ—Ä–æ—Ç–∫–∞—è –∫–∞—Ä—å–µ—Ä–∞'],
    requirements: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã, —Ö–∞—Ä–∏–∑–º–∞, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏, —É–ø–æ—Ä—Å—Ç–≤–æ',
    timeline: '2-3 –≥–æ–¥–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤'
  },
  {
    id: 6,
    name: '–°–æ–∑–¥–∞—Ç—å –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–Ω–¥',
    description: '–ü–æ–º–æ—â—å –ª—é–¥—è–º –∏ –æ–±—â–µ—Å—Ç–≤—É',
    detailedDescription: '–ú–µ—á—Ç–∞ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ - —ç—Ç–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –ø–æ–º–æ—á—å –ª—é–¥—è–º, –≤–Ω–µ—Å—Ç–∏ –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –æ–±—â–µ—Å—Ç–≤–∞ –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ —Å–µ–±—è —á—Ç–æ-—Ç–æ –∑–Ω–∞—á–∏–º–æ–µ. –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –º–æ—Ä–∞–ª—å–Ω–æ–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ, –Ω–æ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–æ–º.',
    category: '–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
    estimatedCost: 1000000,
    monthlyIncome: 0,
    icon: <HeartIcon />,
    pros: ['–ü–æ–º–æ—â—å –ª—é–¥—è–º', '–ú–æ—Ä–∞–ª—å–Ω–æ–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ', '–ù–∞–ª–æ–≥–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã', '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å'],
    cons: ['–í—ã—Å–æ–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', '–°–ª–æ–∂–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã', '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—è'],
    requirements: '–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª, —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è, –æ–ø—ã—Ç –≤ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
    timeline: '5-10 –ª–µ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Ñ–æ–Ω–¥–∞'
  }
];

const DreamSelector = ({ onDreamSelect, selectedDream, isHost = false }) => {
  const [selectedDreamDetail, setSelectedDreamDetail] = useState(null);
  const [detailDialogOpen, setDetailDialogOpen] = useState(false);

  const handleDreamSelect = (dream) => {
    if (isHost) {
      // –ï—Å–ª–∏ —ç—Ç–æ —Ö–æ—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
      setSelectedDreamDetail(dream);
      setDetailDialogOpen(true);
    } else {
      // –ï—Å–ª–∏ –æ–±—ã—á–Ω—ã–π –∏–≥—Ä–æ–∫, —Å—Ä–∞–∑—É –≤—ã–±–∏—Ä–∞–µ–º
      onDreamSelect(dream);
    }
  };

  const handleConfirmDream = () => {
    if (selectedDreamDetail) {
      onDreamSelect(selectedDreamDetail);
      setDetailDialogOpen(false);
      setSelectedDreamDetail(null);
    }
  };

  const formatMoney = (amount) => {
    return `$${amount.toLocaleString()}`;
  };

  const getCategoryColor = (category) => {
    const colors = {
      '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å': 'primary',
      '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è': 'secondary',
      '–ë–∏–∑–Ω–µ—Å': 'success',
      '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': 'info',
      '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è': 'warning',
      '–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å': 'error'
    };
    return colors[category] || 'default';
  };

  return (
    <Box>
      <Typography variant="h5" gutterBottom align="center" sx={{ mb: 3 }}>
        {isHost ? '‚≠ê –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –º–µ—á—Ç—É' : 'üí≠ –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –º–µ—á—Ç—É'}
      </Typography>
      
      {isHost && (
        <Typography variant="body1" color="text.secondary" align="center" sx={{ mb: 3 }}>
          –í–∞—à–∞ –º–µ—á—Ç–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–≥—Ä–µ –∏ –º–æ–∂–µ—Ç –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
        </Typography>
      )}

      <Grid container spacing={3}>
        {DREAMS.map((dream) => (
          <Grid item xs={12} sm={6} md={4} key={dream.id}>
            <Card 
              sx={{ 
                height: '100%',
                cursor: 'pointer',
                '&:hover': { boxShadow: 4 },
                border: selectedDream?.id === dream.id ? '2px solid #1976d2' : '1px solid #e0e0e0'
              }}
              onClick={() => handleDreamSelect(dream)}
            >
              <CardContent>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <Avatar sx={{ mr: 2, bgcolor: `${getCategoryColor(dream.category)}.main` }}>
                    {dream.icon}
                  </Avatar>
                  <Box>
                    <Typography variant="h6" component="div" sx={{ fontWeight: 'bold' }}>
                      {dream.name}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      {dream.description}
                    </Typography>
                  </Box>
                </Box>

                <Divider sx={{ my: 2 }} />

                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                  <Typography variant="body2" color="text.secondary">
                    –ö–∞—Ç–µ–≥–æ—Ä–∏—è:
                  </Typography>
                  <Chip 
                    label={dream.category} 
                    size="small" 
                    color={getCategoryColor(dream.category)}
                  />
                </Box>

                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                  <Typography variant="body2" color="text.secondary">
                    –°—Ç–æ–∏–º–æ—Å—Ç—å:
                  </Typography>
                  <Typography variant="body2" sx={{ fontWeight: 'bold', color: 'error.main' }}>
                    {formatMoney(dream.estimatedCost)}
                  </Typography>
                </Box>

                {dream.monthlyIncome > 0 && (
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>
                    <Typography variant="body2" color="text.secondary">
                      –î–æ—Ö–æ–¥:
                    </Typography>
                    <Typography variant="body2" sx={{ fontWeight: 'bold', color: 'success.main' }}>
                      {formatMoney(dream.monthlyIncome)}/–º–µ—Å
                    </Typography>
                  </Box>
                )}

                <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>
                  <Chip 
                    label={dream.timeline}
                    size="small"
                    icon={<StarIcon />}
                    variant="outlined"
                  />
                </Box>
              </CardContent>

              <CardActions>
                <Button
                  size="small"
                  startIcon={<InfoIcon />}
                  onClick={(e) => {
                    e.stopPropagation();
                    setSelectedDreamDetail(dream);
                    setDetailDialogOpen(true);
                  }}
                >
                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </Button>
              </CardActions>
            </Card>
          </Grid>
        ))}
      </Grid>

      {/* –î–∏–∞–ª–æ–≥ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–µ—á—Ç–µ */}
      <Dialog 
        open={detailDialogOpen} 
        onClose={() => setDetailDialogOpen(false)}
        maxWidth="md"
        fullWidth
      >
        {selectedDreamDetail && (
          <>
            <DialogTitle>
              <Box sx={{ display: 'flex', alignItems: 'center' }}>
                <Avatar sx={{ mr: 2, bgcolor: `${getCategoryColor(selectedDreamDetail.category)}.main` }}>
                  {selectedDreamDetail.icon}
                </Avatar>
                <Typography variant="h6">
                  {selectedDreamDetail.name}
                </Typography>
              </Box>
            </DialogTitle>
            
            <DialogContent>
              <Typography variant="body1" paragraph>
                {selectedDreamDetail.detailedDescription}
              </Typography>

              <Grid container spacing={3}>
                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom color="success.main">
                    ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
                  </Typography>
                  <Box component="ul" sx={{ pl: 2 }}>
                    {selectedDreamDetail.pros.map((pro, index) => (
                      <Typography component="li" key={index} variant="body2" sx={{ mb: 1 }}>
                        {pro}
                      </Typography>
                    ))}
                  </Box>
                </Grid>

                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom color="error.main">
                    ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏
                  </Typography>
                  <Box component="ul" sx={{ pl: 2 }}>
                    {selectedDreamDetail.cons.map((con, index) => (
                      <Typography component="li" key={index} variant="body2" sx={{ mb: 1 }}>
                        {con}
                      </Typography>
                    ))}
                  </Box>
                </Grid>
              </Grid>

              <Divider sx={{ my: 3 }} />

              <Grid container spacing={3}>
                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom>
                    üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
                  </Typography>
                  <Typography variant="body2" paragraph>
                    {selectedDreamDetail.requirements}
                  </Typography>
                </Grid>

                <Grid item xs={12} md={6}>
                  <Typography variant="h6" gutterBottom>
                    ‚è±Ô∏è –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
                  </Typography>
                  <Typography variant="body2" paragraph>
                    {selectedDreamDetail.timeline}
                  </Typography>
                </Grid>
              </Grid>

              <Divider sx={{ my: 3 }} />

              <Box sx={{ bgcolor: 'grey.50', p: 2, borderRadius: 1 }}>
                <Typography variant="h6" gutterBottom>
                  üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
                </Typography>
                <Grid container spacing={2}>
                  <Grid item xs={6}>
                    <Typography variant="body2" color="text.secondary">
                      –°—Ç–æ–∏–º–æ—Å—Ç—å
                    </Typography>
                    <Typography variant="h6" color="error.main">
                      {formatMoney(selectedDreamDetail.estimatedCost)}
                    </Typography>
                  </Grid>
                  {selectedDreamDetail.monthlyIncome > 0 && (
                    <Grid item xs={6}>
                      <Typography variant="body2" color="text.secondary">
                        –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥
                      </Typography>
                      <Typography variant="h6" color="success.main">
                        {formatMoney(selectedDreamDetail.monthlyIncome)}/–º–µ—Å
                      </Typography>
                    </Grid>
                  )}
                </Grid>
              </Box>
            </DialogContent>

            <DialogActions>
              <Button onClick={() => setDetailDialogOpen(false)}>
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
              {isHost && (
                <Button 
                  onClick={handleConfirmDream}
                  variant="contained"
                  startIcon={<HeartIcon />}
                >
                  –í—ã–±—Ä–∞—Ç—å —ç—Ç—É –º–µ—á—Ç—É
                </Button>
              )}
            </DialogActions>
          </>
        )}
      </Dialog>
    </Box>
  );
};

export default DreamSelector;
