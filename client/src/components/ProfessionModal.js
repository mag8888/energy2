import React, { useState } from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  Card,
  CardContent,
  Grid,
  Chip,
  Alert
} from '@mui/material';
import { motion } from 'framer-motion';
import { AttachMoney, TrendingUp, CreditCard, CheckCircle, Warning } from '@mui/icons-material';

const PROFESSIONS = [
  {
    id: 'engineer',
    name: '–ò–Ω–∂–µ–Ω–µ—Ä',
    salary: 5000,
    expenses: 2000,
    passiveIncome: 0,
    description: '–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ö–æ—Ä–æ—à–µ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π'
  },
  {
    id: 'doctor',
    name: '–í—Ä–∞—á',
    salary: 8000,
    expenses: 3000,
    passiveIncome: 0,
    description: '–í—ã—Å–æ–∫–æ–æ–ø–ª–∞—á–∏–≤–∞–µ–º–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è —Å –±–æ–ª—å—à–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏'
  },
  {
    id: 'teacher',
    name: '–£—á–∏—Ç–µ–ª—å',
    salary: 3000,
    expenses: 1500,
    passiveIncome: 0,
    description: '–°–∫—Ä–æ–º–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥'
  },
  {
    id: 'businessman',
    name: '–ë–∏–∑–Ω–µ—Å–º–µ–Ω',
    salary: 12000,
    expenses: 5000,
    passiveIncome: 1000,
    description: '–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫, –Ω–æ –±–æ–ª—å—à–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª'
  }
];

const ProfessionModal = ({ open, onClose, onSelectProfession, profession, playerBalance, onPayOffCredit }) => {
  const [showPayOffAlert, setShowPayOffAlert] = useState(false);
  const [creditToPayOff, setCreditToPayOff] = useState(null);

  const handleSelect = (profession) => {
    if (onSelectProfession) {
      onSelectProfession(profession);
      onClose();
    }
  };

  const handlePayOffCredit = (creditType, amount) => {
    setCreditToPayOff({ type: creditType, amount });
    setShowPayOffAlert(true);
  };

  const confirmPayOffCredit = () => {
    if (onPayOffCredit && creditToPayOff) {
      onPayOffCredit(creditToPayOff.type, creditToPayOff.amount);
      setShowPayOffAlert(false);
      setCreditToPayOff(null);
    }
  };

  const canExitToBigCircle = (profession) => {
    return profession && profession.passiveIncome > profession.totalExpenses;
  };

  const formatCurrency = (amount) => {
    return `$${amount?.toLocaleString() || '0'}`;
  };

  return (
    <Dialog
      open={open}
      onClose={onClose}
      maxWidth="md"
      fullWidth
      component={motion.div}
      initial={{ opacity: 0, scale: 0.9 }}
      animate={{ opacity: 1, scale: 1 }}
      exit={{ opacity: 0, scale: 0.9 }}
    >
      <DialogTitle>
        {profession && profession.name ? `üíº ${profession.name}` : 'üíº –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é'}
      </DialogTitle>
      <DialogContent>
        {profession ? (
          // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
          <Box>
            <Typography variant="h6" gutterBottom color="primary">
              –î–µ—Ç–∞–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
            </Typography>
            
            <Box sx={{ 
              background: '#f5f5f5', 
              p: 3, 
              borderRadius: 2, 
              mb: 3 
            }}>
              <Typography variant="body1" sx={{ mb: 2, fontWeight: 'bold' }}>
                {profession.description || '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏'}
              </Typography>
              
              {/* –î–æ—Ö–æ–¥—ã */}
              <Typography variant="h6" gutterBottom color="success.main" sx={{ mt: 3, mb: 2 }}>
                üí∞ –î–æ—Ö–æ–¥—ã
              </Typography>
              <Grid container spacing={2} sx={{ mb: 3 }}>
                <Grid item xs={12} sm={6}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                    <Typography variant="body2" color="text.secondary">–ó–∞—Ä–ø–ª–∞—Ç–∞:</Typography>
                    <Typography variant="body2" color="success.main" fontWeight="bold">
                      {formatCurrency(profession.salary)}
                    </Typography>
                  </Box>
                </Grid>
                
                <Grid item xs={12} sm={6}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                    <Typography variant="body2" color="text.secondary">–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥:</Typography>
                    <Typography variant="body2" color="success.main" fontWeight="bold">
                      {formatCurrency(profession.passiveIncome)}
                    </Typography>
                  </Box>
                </Grid>
                
                <Grid item xs={12} sm={6}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                    <Typography variant="body2" color="text.secondary">–î–∏–≤–∏–¥–µ–Ω–¥—ã:</Typography>
                    <Typography variant="body2" color="success.main" fontWeight="bold">
                      {formatCurrency(profession.dividends)}
                    </Typography>
                  </Box>
                </Grid>
                
                <Grid item xs={12}>
                  <Box sx={{ 
                    display: 'flex', 
                    justifyContent: 'space-between', 
                    mb: 1,
                    p: 1,
                    backgroundColor: 'rgba(76, 175, 80, 0.1)',
                    borderRadius: 1,
                    border: '1px solid #4caf50'
                  }}>
                    <Typography variant="body1" color="success.main" fontWeight="bold">
                      –û–±—â–∏–π –¥–æ—Ö–æ–¥:
                    </Typography>
                    <Typography variant="body1" color="success.main" fontWeight="bold">
                      {formatCurrency(profession.totalIncome)}
                    </Typography>
                  </Box>
                </Grid>
              </Grid>

              {/* –†–∞—Å—Ö–æ–¥—ã (–Ω–µ–ª—å–∑—è –ø–æ–≥–∞—Å–∏—Ç—å) */}
              <Typography variant="h6" gutterBottom color="error.main" sx={{ mt: 3, mb: 2 }}>
                üìâ –†–∞—Å—Ö–æ–¥—ã (–Ω–µ–ª—å–∑—è –ø–æ–≥–∞—Å–∏—Ç—å)
              </Typography>
              <Grid container spacing={2} sx={{ mb: 3 }}>
                <Grid item xs={12} sm={6}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                    <Typography variant="body2" color="text.secondary">–ù–∞–ª–æ–≥–∏ ({profession.taxRate * 100}%):</Typography>
                    <Typography variant="body2" color="error.main" fontWeight="bold">
                      {formatCurrency(profession.taxAmount)}
                    </Typography>
                  </Box>
                </Grid>
                
                <Grid item xs={12} sm={6}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                    <Typography variant="body2" color="text.secondary">–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã:</Typography>
                    <Typography variant="body2" color="error.main" fontWeight="bold">
                      {formatCurrency(profession.otherExpenses)}
                    </Typography>
                  </Box>
                </Grid>
              </Grid>

              {/* –ö—Ä–µ–¥–∏—Ç—ã (–º–æ–∂–Ω–æ –≥–∞—Å–∏—Ç—å) */}
              <Typography variant="h6" gutterBottom color="warning.main" sx={{ mt: 3, mb: 2 }}>
                üí≥ –ö—Ä–µ–¥–∏—Ç—ã (–º–æ–∂–Ω–æ –≥–∞—Å–∏—Ç—å)
              </Typography>
              <Grid container spacing={2} sx={{ mb: 3 }}>
                {profession.creditAuto > 0 && (
                  <Grid item xs={12} sm={6}>
                    <Box sx={{ 
                      display: 'flex', 
                      justifyContent: 'space-between', 
                      mb: 1,
                      p: 1,
                      backgroundColor: 'rgba(255, 152, 0, 0.1)',
                      borderRadius: 1,
                      border: '1px solid #ff9800'
                    }}>
                      <Typography variant="body2" color="warning.main">
                        –ê–≤—Ç–æ –∫—Ä–µ–¥–∏—Ç:
                      </Typography>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                        <Typography variant="body2" color="warning.main" fontWeight="bold">
                          {formatCurrency(profession.creditAuto)}
                        </Typography>
                        <Button
                          size="small"
                          variant="outlined"
                          color="warning"
                          onClick={() => handlePayOffCredit('auto', profession.creditAuto)}
                          startIcon={<CheckCircle />}
                        >
                          –ü–æ–≥–∞—Å–∏—Ç—å
                        </Button>
                      </Box>
                    </Box>
                  </Grid>
                )}
                
                {profession.creditEducation > 0 && (
                  <Grid item xs={12} sm={6}>
                    <Box sx={{ 
                      display: 'flex', 
                      justifyContent: 'space-between', 
                      mb: 1,
                      p: 1,
                      backgroundColor: 'rgba(255, 152, 0, 0.1)',
                      borderRadius: 1,
                      border: '1px solid #ff9800'
                    }}>
                      <Typography variant="body2" color="warning.main">
                        –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:
                      </Typography>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                        <Typography variant="body2" color="warning.main" fontWeight="bold">
                          {formatCurrency(profession.creditEducation)}
                        </Typography>
                        <Button
                          size="small"
                          variant="outlined"
                          color="warning"
                          onClick={() => handlePayOffCredit('education', profession.creditEducation)}
                          startIcon={<CheckCircle />}
                        >
                          –ü–æ–≥–∞—Å–∏—Ç—å
                        </Button>
                      </Box>
                    </Box>
                  </Grid>
                )}
                
                {profession.creditHousing > 0 && (
                  <Grid item xs={12} sm={6}>
                    <Box sx={{ 
                      display: 'flex', 
                      justifyContent: 'space-between', 
                      mb: 1,
                      p: 1,
                      backgroundColor: 'rgba(255, 152, 0, 0.1)',
                      borderRadius: 1,
                      border: '1px solid #ff9800'
                    }}>
                      <Typography variant="body2" color="warning.main">
                        –ñ–∏–ª—å–µ:
                      </Typography>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                        <Typography variant="body2" color="warning.main" fontWeight="bold">
                          {formatCurrency(profession.creditHousing)}
                        </Typography>
                        <Button
                          size="small"
                          variant="outlined"
                          color="warning"
                          onClick={() => handlePayOffCredit('housing', profession.creditHousing)}
                          startIcon={<CheckCircle />}
                        >
                          –ü–æ–≥–∞—Å–∏—Ç—å
                        </Button>
                      </Box>
                    </Box>
                  </Grid>
                )}
                
                {profession.creditCards > 0 && (
                  <Grid item xs={12} sm={6}>
                    <Box sx={{ 
                      display: 'flex', 
                      justifyContent: 'space-between', 
                      mb: 1,
                      p: 1,
                      backgroundColor: 'rgba(255, 152, 0, 0.1)',
                      borderRadius: 1,
                      border: '1px solid #ff9800'
                    }}>
                      <Typography variant="body2" color="warning.main">
                        –ö—Ä–µ–¥–∏—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ã:
                      </Typography>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                        <Typography variant="body2" color="warning.main" fontWeight="bold">
                          {formatCurrency(profession.creditCards)}
                        </Typography>
                        <Button
                          size="small"
                          variant="outlined"
                          color="warning"
                          onClick={() => handlePayOffCredit('cards', profession.creditCards)}
                          startIcon={<CheckCircle />}
                        >
                          –ü–æ–≥–∞—Å–∏—Ç—å
                        </Button>
                      </Box>
                    </Box>
                  </Grid>
                )}
              </Grid>

              {/* –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã */}
              <Typography variant="h6" gutterBottom color="info.main" sx={{ mt: 3, mb: 2 }}>
                üìä –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã
              </Typography>
              <Grid container spacing={2} sx={{ mb: 3 }}>
                <Grid item xs={12} sm={6}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                    <Typography variant="body2" color="text.secondary">–û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã:</Typography>
                    <Typography variant="body2" color="error.main" fontWeight="bold">
                      {formatCurrency(profession.totalExpenses)}
                    </Typography>
                  </Box>
                </Grid>
                
                <Grid item xs={12}>
                  <Box sx={{ 
                    display: 'flex', 
                    justifyContent: 'space-between', 
                    mb: 1,
                    p: 2,
                    backgroundColor: 'rgba(33, 150, 243, 0.1)',
                    borderRadius: 1,
                    border: '1px solid #2196f3'
                  }}>
                    <Typography variant="h6" color="info.main" fontWeight="bold">
                      üí∞ –î–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫:
                    </Typography>
                    <Typography variant="h6" color="info.main" fontWeight="bold">
                      {formatCurrency(profession.cashFlow)}
                    </Typography>
                  </Box>
                </Grid>
              </Grid>

              {/* –ö–Ω–æ–ø–∫–∞ "–í—ã–π—Ç–∏ –Ω–∞ –±–æ–ª—å—à–æ–π –∫—Ä—É–≥" */}
              {canExitToBigCircle(profession) && (
                <Box sx={{ 
                  mt: 3, 
                  p: 2, 
                  background: 'linear-gradient(45deg, #4caf50, #8bc34a)', 
                  borderRadius: 2,
                  border: '2px solid #4caf50',
                  textAlign: 'center'
                }}>
                  <Typography variant="h6" color="white" gutterBottom>
                    üéØ –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥—ã!
                  </Typography>
                  <Button
                    variant="contained"
                    size="large"
                    sx={{
                      backgroundColor: 'rgba(255,255,255,0.2)',
                      color: 'white',
                      border: '2px solid white',
                      '&:hover': {
                        backgroundColor: 'rgba(255,255,255,0.3)'
                      }
                    }}
                    startIcon={<TrendingUp />}
                  >
                    üöÄ –í—ã–π—Ç–∏ –Ω–∞ –±–æ–ª—å—à–æ–π –∫—Ä—É–≥
                  </Button>
                </Box>
              )}
              
              {playerBalance !== undefined && (
                <Box sx={{ 
                  mt: 3, 
                  p: 2, 
                  background: '#e8f5e8', 
                  borderRadius: 2,
                  border: '1px solid #4caf50'
                }}>
                  <Typography variant="h6" color="success.main" gutterBottom>
                    üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞
                  </Typography>
                  <Typography variant="h4" color="success.main" fontWeight="bold">
                    {formatCurrency(playerBalance)}
                  </Typography>
                </Box>
              )}
            </Box>
          </Box>
        ) : (
          // –í—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
          <>
            <Typography variant="body2" color="text.secondary" sx={{ mb: 3 }}>
              –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã. –ö–∞–∂–¥–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏–º–µ–µ—Ç —Å–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏.
            </Typography>
            
            <Grid container spacing={2}>
              {PROFESSIONS.map((prof) => (
                <Grid item xs={12} sm={6} key={prof.id}>
                  <motion.div
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                  >
                    <Card 
                      sx={{ 
                        cursor: 'pointer',
                        '&:hover': { boxShadow: 3 }
                      }}
                      onClick={() => handleSelect(prof)}
                    >
                      <CardContent>
                        <Typography variant="h6" gutterBottom>
                          {prof.name}
                        </Typography>
                        <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
                          {prof.description}
                        </Typography>
                        
                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                          <Typography variant="body2">–ó–∞—Ä–ø–ª–∞—Ç–∞:</Typography>
                          <Typography variant="body2" color="success.main">
                            {formatCurrency(prof.salary)}
                          </Typography>
                        </Box>
                        
                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                          <Typography variant="body2">–î–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫:</Typography>
                          <Typography variant="body2" color="info.main">
                            {formatCurrency(prof.cashFlow)}
                          </Typography>
                        </Box>
                        
                        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                          <Typography variant="body2">–ë–∞–ª–∞–Ω—Å:</Typography>
                          <Typography variant="body2" color="success.main">
                            {formatCurrency(prof.balance)}
                          </Typography>
                        </Box>
                      </CardContent>
                    </Card>
                  </motion.div>
                </Grid>
              ))}
            </Grid>
          </>
        )}
      </DialogContent>
      <DialogActions>
        <Button onClick={onClose}>–û—Ç–º–µ–Ω–∞</Button>
      </DialogActions>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞ */}
      <Dialog
        open={showPayOffAlert}
        onClose={() => setShowPayOffAlert(false)}
        maxWidth="sm"
        fullWidth
      >
        <DialogTitle>
          üí≥ –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞
        </DialogTitle>
        <DialogContent>
          <Alert severity="info" sx={{ mb: 2 }}>
            –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –Ω–∞ —Å—É–º–º—É {formatCurrency(creditToPayOff?.amount)}?
          </Alert>
          <Typography variant="body2" color="text.secondary">
            –ü–æ—Å–ª–µ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞ –≤–∞—à–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã —É–º–µ–Ω—å—à–∞—Ç—Å—è, –∞ –¥–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫ —É–≤–µ–ª–∏—á–∏—Ç—Å—è.
          </Typography>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setShowPayOffAlert(false)}>–û—Ç–º–µ–Ω–∞</Button>
          <Button 
            onClick={confirmPayOffCredit} 
            variant="contained" 
            color="success"
            startIcon={<CheckCircle />}
          >
            –ü–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç
          </Button>
        </DialogActions>
      </Dialog>
    </Dialog>
  );
};

export default ProfessionModal;
