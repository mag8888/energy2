const io = require('socket.io-client');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
const socket = io('http://localhost:5000');

socket.on('connect', () => {
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('\nüîê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
  socket.emit('authenticateUser', 'DreamTester', 'dreamtester@example.com', 'dreampass123', (response) => {
    console.log('üìß –û—Ç–≤–µ—Ç –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:', response);
    
    if (response.success) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!');
      console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.userData);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
      console.log('\nüè† –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã...');
      socket.emit('createRoom', {
        name: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ —Å –Ω–æ–≤—ã–º–∏ –º–µ—á—Ç–∞–º–∏',
        professionType: 'individual',
        maxPlayers: 4,
        gameDuration: 180
      });
      
      // –°–ª—É—à–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
      socket.on('roomCreated', (roomResponse) => {
        console.log('üìß –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã:', roomResponse);
        
        if (roomResponse.success) {
          console.log('‚úÖ –ö–æ–º–Ω–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
          console.log('üè† ID –∫–æ–º–Ω–∞—Ç—ã:', roomResponse.roomId);
          
          // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å –Ω–æ–≤–æ–π –º–µ—á—Ç–æ–π (–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å)
          console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å –Ω–æ–≤–æ–π –º–µ—á—Ç–æ–π...');
          const readyData = {
            roomId: roomResponse.roomId,
            playerId: response.userData.id,
            professionId: 1, // –ü–µ—Ä–≤–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è
            dreamId: 7 // –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å (—ç–∫–æ-—Ä–∞–Ω—á–æ) - 1,000,000‚ÇΩ
          };
          
          socket.emit('playerReady', readyData);
          console.log('üìß –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:', readyData);
          console.log('üåü –í—ã–±—Ä–∞–Ω–∞ –º–µ—á—Ç–∞: –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å (—ç–∫–æ-—Ä–∞–Ω—á–æ) - 1,000,000‚ÇΩ');
          
          // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(() => {
            socket.disconnect();
            process.exit(0);
          }, 2000);
        } else {
          console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã:', roomResponse.error);
          socket.disconnect();
          process.exit(1);
        }
      });
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', response.error);
      socket.disconnect();
      process.exit(1);
    }
  });
});

socket.on('error', (error) => {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
  process.exit(1);
});

// –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
setTimeout(() => {
  console.log('‚è∞ –¢–∞–π–º–∞—É—Ç - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç');
  process.exit(1);
}, 10000);

