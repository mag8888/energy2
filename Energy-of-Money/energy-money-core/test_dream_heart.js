const io = require('socket.io-client');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
const socket = io('http://localhost:5000');

socket.on('connect', () => {
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('\nüîê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
  socket.emit('authenticateUser', 'DreamHeartTester', 'dreamheart@example.com', 'heartpass123', (response) => {
    console.log('üìß –û—Ç–≤–µ—Ç –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:', response);
    
    if (response.success) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!');
      console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.userData);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
      console.log('\nüè† –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã...');
      socket.emit('createRoom', {
        name: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏ –Ω–∞ –º–µ—á—Ç–∞—Ö',
        professionType: 'individual',
        maxPlayers: 4,
        gameDuration: 180
      });
      
      // –°–ª—É—à–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
      socket.on('roomCreated', (roomResponse) => {
        console.log('üìß –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã:', roomResponse);
        
        if (roomResponse.success) {
          console.log('‚úÖ –ö–æ–º–Ω–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
          console.log('üè† ID –∫–æ–º–Ω–∞—Ç—ã:', roomResponse.roomId);
          
          // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–∞ —Å –º–µ—á—Ç–æ–π
          console.log('\nüåü –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–∞ —Å –º–µ—á—Ç–æ–π...');
          const readyData = {
            roomId: roomResponse.roomId,
            playerId: response.userData.id,
            professionId: 1, // –ò–Ω–∂–µ–Ω–µ—Ä
            dreamId: 2 // –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º –º–µ—á—Ç—ã –¥–ª—è —Å–µ–º—å–∏
          };
          console.log('üéØ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º playerReady —Å –º–µ—á—Ç–æ–π:', readyData);
          socket.emit('playerReady', readyData);
          
          // –°–ª—É—à–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
          socket.on('playerReadyResponse', (readyResponse) => {
            console.log('üìß –û—Ç–≤–µ—Ç –Ω–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:', readyResponse);
            
            if (readyResponse.success) {
              console.log('‚úÖ –ò–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –≥–æ—Ç–æ–≤ —Å –º–µ—á—Ç–æ–π!');
              console.log('üåü –í—ã–±—Ä–∞–Ω–Ω–∞—è –º–µ—á—Ç–∞:', readyResponse.dream);
              
              // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ—Å—Ç
              console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
              console.log('‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–µ—Ä–¥–µ—á–∫–∞ –Ω–∞ –º–µ—á—Ç–∞—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
              socket.disconnect();
              process.exit(0);
            } else {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:', readyResponse.error);
              socket.disconnect();
              process.exit(1);
            }
          });
          
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã:', roomResponse.error);
          socket.disconnect();
          process.exit(1);
        }
      });
      
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', response.error);
      socket.disconnect();
      process.exit(1);
    }
  });
});

socket.on('disconnect', () => {
  console.log('üîå –û—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
});

socket.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ WebSocket:', error);
  process.exit(1);
});

// –¢–∞–π–º–∞—É—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
setTimeout(() => {
  console.error('‚è∞ –¢–∞–π–º–∞—É—Ç - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç');
  socket.disconnect();
  process.exit(1);
}, 10000);

