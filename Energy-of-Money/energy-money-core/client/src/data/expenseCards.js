import React from 'react';
import {
  ShoppingCart as ShoppingIcon, PhoneIphone as PhoneIcon, DirectionsCar as CarIcon,
  Flight as FlightIcon, Restaurant as RestaurantIcon, LocalHospital as HospitalIcon,
  School as SchoolIcon, Home as HomeIcon, SportsEsports as GamingIcon,
  LocalBar as BarIcon, Movie as MovieIcon, Spa as SpaIcon,
  FitnessCenter as GymIcon, Pets as PetIcon, LocalGroceryStore as GroceryIcon,
  LocalPharmacy as PharmacyIcon, LocalGasStation as GasIcon, LocalLaundryService as LaundryIcon,
  LocalTaxi as TaxiIcon, LocalPizza as PizzaIcon, LocalCafe as CoffeeIcon,
  LocalFlorist as FlowerIcon, LocalCarWash as CarWashIcon, LocalPrintshop as PrintIcon
} from '@mui/icons-material';

// –ö–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–∞—Ç—ã
export const EXPENSE_CARDS = [
  // –ü–æ–∫—É–ø–∫–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–∞
  {
    id: 1,
    name: '–ù–æ–≤—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω',
    description: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
    cost: 800,
    icon: <PhoneIcon />,
    category: 'technology',
    type: 'purchase'
  },
  {
    id: 2,
    name: '–ù–æ—É—Ç–±—É–∫',
    description: '–ü–æ–∫—É–ø–∫–∞ –Ω–æ–≤–æ–≥–æ –Ω–æ—É—Ç–±—É–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã',
    cost: 1200,
    icon: <PhoneIcon />,
    category: 'technology',
    type: 'purchase'
  },
  {
    id: 3,
    name: '–ü–ª–∞–Ω—à–µ—Ç',
    description: '–ü–æ–∫—É–ø–∫–∞ –ø–ª–∞–Ω—à–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π',
    cost: 500,
    icon: <PhoneIcon />,
    category: 'technology',
    type: 'purchase'
  },
  {
    id: 4,
    name: '–ò–≥—Ä–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞',
    description: '–ü–æ–∫—É–ø–∫–∞ –∏–≥—Ä–æ–≤–æ–π –∫–æ–Ω—Å–æ–ª–∏',
    cost: 400,
    icon: <GamingIcon />,
    category: 'entertainment',
    type: 'purchase'
  },
  {
    id: 5,
    name: '–ù–∞—É—à–Ω–∏–∫–∏',
    description: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏',
    cost: 150,
    icon: <PhoneIcon />,
    category: 'technology',
    type: 'purchase'
  },

  // –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç
  {
    id: 6,
    name: '–†–µ–º–æ–Ω—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
    description: '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –º–∞—à–∏–Ω—ã',
    cost: 800,
    icon: <CarIcon />,
    category: 'transport',
    type: 'repair'
  },
  {
    id: 7,
    name: '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂',
    description: '–ó–∞–º–µ–Ω–∞ —Ä–µ–∑–∏–Ω—ã –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ',
    cost: 300,
    icon: <CarIcon />,
    category: 'transport',
    type: 'maintenance'
  },
  {
    id: 8,
    name: '–¢–∞–∫—Å–∏',
    description: '–ü–æ–µ–∑–¥–∫–∞ –Ω–∞ —Ç–∞–∫—Å–∏ –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç',
    cost: 80,
    icon: <TaxiIcon />,
    category: 'transport',
    type: 'service'
  },
  {
    id: 9,
    name: '–ó–∞–ø—Ä–∞–≤–∫–∞',
    description: '–ü–æ–ª–Ω–∞—è –∑–∞–ø—Ä–∞–≤–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
    cost: 60,
    icon: <GasIcon />,
    category: 'transport',
    type: 'fuel'
  },

  // –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
  {
    id: 10,
    name: '–ë–∏–ª–µ—Ç –Ω–∞ —Å–∞–º–æ–ª–µ—Ç',
    description: '–ê–≤–∏–∞–±–∏–ª–µ—Ç –≤ –æ—Ç–ø—É—Å–∫',
    cost: 400,
    icon: <FlightIcon />,
    category: 'travel',
    type: 'transport'
  },
  {
    id: 11,
    name: '–û—Ç–µ–ª—å',
    description: '–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –≤ –æ—Ç–µ–ª–µ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ',
    cost: 200,
    icon: <HomeIcon />,
    category: 'travel',
    type: 'accommodation'
  },
  {
    id: 12,
    name: '–≠–∫—Å–∫—É—Ä—Å–∏—è',
    description: '–≠–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω—ã–π —Ç—É—Ä',
    cost: 100,
    icon: <FlightIcon />,
    category: 'travel',
    type: 'activity'
  },

  // –ï–¥–∞ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã
  {
    id: 13,
    name: '–†–µ—Å—Ç–æ—Ä–∞–Ω',
    description: '–£–∂–∏–Ω –≤ –¥–æ—Ä–æ–≥–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ',
    cost: 120,
    icon: <RestaurantIcon />,
    category: 'food',
    type: 'dining'
  },
  {
    id: 14,
    name: '–ü–∏—Ü—Ü–∞',
    description: '–ó–∞–∫–∞–∑ –ø–∏—Ü—Ü—ã –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫—É',
    cost: 50,
    icon: <PizzaIcon />,
    category: 'food',
    type: 'delivery'
  },
  {
    id: 15,
    name: '–ö–æ—Ñ–µ',
    description: '–ö–æ—Ñ–µ –≤ –∫–æ—Ñ–µ–π–Ω–µ',
    cost: 8,
    icon: <CoffeeIcon />,
    category: 'food',
    type: 'beverage'
  },
  {
    id: 16,
    name: '–ü—Ä–æ–¥—É–∫—Ç—ã',
    description: '–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –Ω–µ–¥–µ–ª—é',
    cost: 150,
    icon: <GroceryIcon />,
    category: 'food',
    type: 'groceries'
  },

  // –ó–¥–æ—Ä–æ–≤—å–µ –∏ –∫—Ä–∞—Å–æ—Ç–∞
  {
    id: 17,
    name: '–í–∏–∑–∏—Ç –∫ –≤—Ä–∞—á—É',
    description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞',
    cost: 100,
    icon: <HospitalIcon />,
    category: 'health',
    type: 'medical'
  },
  {
    id: 18,
    name: '–°–ø–∞-–ø—Ä–æ—Ü–µ–¥—É—Ä—ã',
    description: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã',
    cost: 200,
    icon: <SpaIcon />,
    category: 'beauty',
    type: 'wellness'
  },
  {
    id: 19,
    name: '–ê–ø—Ç–µ–∫–∞',
    description: '–ü–æ–∫—É–ø–∫–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤',
    cost: 80,
    icon: <PharmacyIcon />,
    category: 'health',
    type: 'medicine'
  },
  {
    id: 20,
    name: '–§–∏—Ç–Ω–µ—Å-–∫–ª—É–±',
    description: '–ê–±–æ–Ω–µ–º–µ–Ω—Ç –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª',
    cost: 100,
    icon: <GymIcon />,
    category: 'health',
    type: 'fitness'
  },

  // –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
  {
    id: 21,
    name: '–ö–∏–Ω–æ',
    description: '–ü–æ—Ö–æ–¥ –≤ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä',
    cost: 25,
    icon: <MovieIcon />,
    category: 'entertainment',
    type: 'leisure'
  },
  {
    id: 22,
    name: '–ë–∞—Ä',
    description: '–í–µ—á–µ—Ä –≤ –±–∞—Ä–µ —Å –¥—Ä—É–∑—å—è–º–∏',
    cost: 60,
    icon: <BarIcon />,
    category: 'entertainment',
    type: 'social'
  },
  {
    id: 23,
    name: '–¶–≤–µ—Ç—ã',
    description: '–ë—É–∫–µ—Ç —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞',
    cost: 40,
    icon: <FlowerIcon />,
    category: 'gifts',
    type: 'present'
  },
  {
    id: 24,
    name: '–ü–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
    description: '–ü–µ—á–∞—Ç—å –≤–∞–∂–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
    cost: 15,
    icon: <PrintIcon />,
    category: 'services',
    type: 'business'
  }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
export const getRandomExpenseCard = () => {
  const randomIndex = Math.floor(Math.random() * EXPENSE_CARDS.length);
  return EXPENSE_CARDS[randomIndex];
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ ID
export const getExpenseCardById = (id) => {
  return EXPENSE_CARDS.find(card => card.id === id);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
export const getExpenseCardsByCategory = (category) => {
  return EXPENSE_CARDS.filter(card => card.category === category);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ —Ç–∏–ø—É
export const getExpenseCardsByType = (type) => {
  return EXPENSE_CARDS.filter(card => card.type === type);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏
export const getExpenseCardsByCostRange = (minCost, maxCost) => {
  return EXPENSE_CARDS.filter(card => card.cost >= minCost && card.cost <= maxCost);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ (–∞–ª–≥–æ—Ä–∏—Ç–º –§–∏—à–µ—Ä–∞-–ô–µ–π—Ç—Å–∞)
const shuffleArray = (array) => {
  const shuffled = [...array];
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }
  return shuffled;
};

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–¥—ã –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ (24 –∫–∞—Ä—Ç–æ—á–∫–∏)
export const createExpenseDeck = () => {
  return shuffleArray([...EXPENSE_CARDS]);
};

// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–¥–æ–π –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤
export class ExpenseDeckManager {
  constructor() {
    this.deck = createExpenseDeck();
    this.discardPile = [];
  }

  // –í—ã—Ç–∞—â–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∏–∑ –∫–æ–ª–æ–¥—ã
  drawCard() {
    if (this.deck.length === 0) {
      // –ï—Å–ª–∏ –∫–æ–ª–æ–¥–∞ –ø—É—Å—Ç–∞, –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –æ—Ç–±–æ–π
      this.shuffleDiscardPile();
    }
    
    if (this.deck.length === 0) {
      return null; // –ù–µ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫
    }
    
    return this.deck.pop();
  }

  // –û—Ç–ª–æ–∂–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –≤ –æ—Ç–±–æ–π
  discardCard(card) {
    if (card) {
      this.discardPile.push(card);
    }
  }

  // –ü–µ—Ä–µ–º–µ—à–∞—Ç—å –æ—Ç–±–æ–π –∏ –≤–µ—Ä–Ω—É—Ç—å –≤ –∫–æ–ª–æ–¥—É
  shuffleDiscardPile() {
    if (this.discardPile.length > 0) {
      this.deck = shuffleArray([...this.discardPile]);
      this.discardPile = [];
      console.log('üîÑ [ExpenseDeckManager] –û—Ç–±–æ–π –ø–µ—Ä–µ–º–µ—à–∞–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤ –∫–æ–ª–æ–¥—É');
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ–ª–æ–¥–µ
  getDeckCount() {
    return this.deck.length;
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –æ—Ç–±–æ–µ
  getDiscardCount() {
    return this.discardPile.length;
  }

  // –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫
  getTotalCount() {
    return this.deck.length + this.discardPile.length;
  }

  // –ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤—Å—é –∫–æ–ª–æ–¥—É –∑–∞–Ω–æ–≤–æ
  reshuffle() {
    this.deck = createExpenseDeck();
    this.discardPile = [];
    console.log('üîÑ [ExpenseDeckManager] –ö–æ–ª–æ–¥–∞ –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞ –∑–∞–Ω–æ–≤–æ');
  }
}

