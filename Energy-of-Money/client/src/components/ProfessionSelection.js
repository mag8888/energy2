import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import {
  Box,
  Typography,
  Card,
  CardContent,
  Grid,
  Button,
  Avatar,
  Chip,
  Paper,
  Divider,
  IconButton,
  Tooltip
} from '@mui/material';
import {
  Work as WorkIcon,
  School as SchoolIcon,
  Business as BusinessIcon,
  LocalHospital as HealthIcon,
  Engineering as TechIcon,
  Restaurant as FoodIcon,
  LocalShipping as TransportIcon,
  Security as SecurityIcon,
  Check as CheckIcon,
  ArrowForward as ArrowIcon
} from '@mui/icons-material';

const professions = [
  {
    id: 'employee',
    name: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
    icon: WorkIcon,
    description: '–°—Ç–∞–±–∏–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏',
    salary: '30,000 - 80,000 ‚ÇΩ',
    risk: '–ù–∏–∑–∫–∏–π',
    color: '#4caf50',
    benefits: ['–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å', '–°–æ—Ü–ø–∞–∫–µ—Ç', '–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç'],
    drawbacks: ['–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥', '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è']
  },
  {
    id: 'entrepreneur',
    name: '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å',
    icon: BusinessIcon,
    description: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å, –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
    salary: '50,000 - 500,000+ ‚ÇΩ',
    risk: '–í—ã—Å–æ–∫–∏–π',
    color: '#ff9800',
    benefits: ['–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥', '–°–≤–æ–±–æ–¥–∞', '–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ'],
    drawbacks: ['–í—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å']
  },
  {
    id: 'freelancer',
    name: '–§—Ä–∏–ª–∞–Ω—Å–µ—Ä',
    icon: SchoolIcon,
    description: '–°–≤–æ–±–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫, —Ä–∞–±–æ—Ç–∞ –Ω–∞ —Å–µ–±—è',
    salary: '40,000 - 200,000 ‚ÇΩ',
    risk: '–°—Ä–µ–¥–Ω–∏–π',
    color: '#2196f3',
    benefits: ['–ì–∏–±–∫–æ—Å—Ç—å', '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤', '–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —Å–≤–æ–±–æ–¥–∞'],
    drawbacks: ['–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–æ–≤', '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–æ—Ü–ø–∞–∫–µ—Ç–∞']
  },
  {
    id: 'investor',
    name: '–ò–Ω–≤–µ—Å—Ç–æ—Ä',
    icon: BusinessIcon,
    description: '–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –≤–ª–æ–∂–µ–Ω–∏–π',
    salary: '20,000 - 1,000,000+ ‚ÇΩ',
    risk: '–í—ã—Å–æ–∫–∏–π',
    color: '#9c27b0',
    benefits: ['–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥', '–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è', '–ù–∞–ª–æ–≥–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã'],
    drawbacks: ['–í—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏', '–¢—Ä–µ–±—É–µ—Ç –∫–∞–ø–∏—Ç–∞–ª', '–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å']
  },
  {
    id: 'specialist',
    name: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç',
    icon: TechIcon,
    description: '–≠–∫—Å–ø–µ—Ä—Ç –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏',
    salary: '60,000 - 300,000 ‚ÇΩ',
    risk: '–°—Ä–µ–¥–Ω–∏–π',
    color: '#f44336',
    benefits: ['–í—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥', '–≠–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å', '–í–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ—Å—Ç—å'],
    drawbacks: ['–£–∑–∫–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è', '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è']
  },
  {
    id: 'consultant',
    name: '–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
    icon: HealthIcon,
    description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –æ–±—É—á–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö',
    salary: '50,000 - 400,000 ‚ÇΩ',
    risk: '–°—Ä–µ–¥–Ω–∏–π',
    color: '#00bcd4',
    benefits: ['–í—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥', '–ü–æ–º–æ—â—å –ª—é–¥—è–º', '–ì–∏–±–∫–æ—Å—Ç—å'],
    drawbacks: ['–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤', '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏–∏']
  }
];

const dreams = [
  {
    id: 'house',
    name: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–º',
    icon: 'üè†',
    description: '–ü—Ä–æ—Å—Ç–æ—Ä–Ω—ã–π –¥–æ–º —Å —É—á–∞—Å—Ç–∫–æ–º',
    cost: '5,000,000 - 50,000,000 ‚ÇΩ',
    color: '#4caf50'
  },
  {
    id: 'business',
    name: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å',
    icon: 'üè¢',
    description: '–ö—Ä—É–ø–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
    cost: '10,000,000 - 100,000,000+ ‚ÇΩ',
    color: '#ff9800'
  },
  {
    id: 'travel',
    name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –º–∏—Ä—É',
    icon: '‚úàÔ∏è',
    description: '–ü–æ—Å–µ—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç—ã',
    cost: '2,000,000 - 10,000,000 ‚ÇΩ',
    color: '#2196f3'
  },
  {
    id: 'education',
    name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    icon: 'üéì',
    description: '–ü—Ä–µ—Å—Ç–∏–∂–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π',
    cost: '3,000,000 - 15,000,000 ‚ÇΩ',
    color: '#9c27b0'
  },
  {
    id: 'charity',
    name: '–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
    icon: '‚ù§Ô∏è',
    description: '–ü–æ–º–æ–≥–∞—Ç—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è',
    cost: '1,000,000 - 50,000,000+ ‚ÇΩ',
    color: '#f44336'
  },
  {
    id: 'retirement',
    name: '–†–∞–Ω–Ω–∏–π –≤—ã—Ö–æ–¥ –Ω–∞ –ø–µ–Ω—Å–∏—é',
    icon: 'üåÖ',
    description: '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤ 40 –ª–µ—Ç',
    cost: '20,000,000 - 100,000,000 ‚ÇΩ',
    color: '#00bcd4'
  }
];

const ProfessionSelection = ({ onComplete }) => {
  const [selectedProfession, setSelectedProfession] = useState(null);
  const [selectedDream, setSelectedDream] = useState(null);
  const [step, setStep] = useState(1); // 1 - –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, 2 - –º–µ—á—Ç–∞

  const handleProfessionSelect = (profession) => {
    setSelectedProfession(profession);
  };

  const handleDreamSelect = (dream) => {
    setSelectedDream(dream);
  };

  const handleNext = () => {
    if (step === 1 && selectedProfession) {
      setStep(2);
    } else if (step === 2 && selectedDream) {
      onComplete({
        profession: selectedProfession,
        dream: selectedDream
      });
    }
  };

  const handleBack = () => {
    if (step === 2) {
      setStep(1);
    }
  };

  const canProceed = (step === 1 && selectedProfession) || (step === 2 && selectedDream);

  return (
    <Box sx={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #e3f2fd 0%, #bbdefb 50%, #90caf9 100%)',
      p: 3
    }}>
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <Box sx={{ mb: 4 }}>
        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>
          <Box sx={{
            width: 40,
            height: 40,
            borderRadius: '50%',
            bgcolor: step >= 1 ? '#4caf50' : '#e0e0e0',
            color: 'white',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            fontWeight: 'bold',
            mr: 2
          }}>
            1
          </Box>
          <Box sx={{
            width: 60,
            height: 4,
            bgcolor: step >= 2 ? '#4caf50' : '#e0e0e0',
            borderRadius: 2
          }} />
          <Box sx={{
            width: 40,
            height: 40,
            borderRadius: '50%',
            bgcolor: step >= 2 ? '#4caf50' : '#e0e0e0',
            color: 'white',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            fontWeight: 'bold',
            ml: 2
          }}>
            2
          </Box>
        </Box>
        <Typography variant="h6" sx={{ textAlign: 'center', color: '#1565c0' }}>
          {step === 1 ? '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é' : '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—á—Ç—É'}
        </Typography>
      </Box>

      <AnimatePresence mode="wait">
        {step === 1 ? (
          <motion.div
            key="professions"
            initial={{ x: -50, opacity: 0 }}
            animate={{ x: 0, opacity: 1 }}
            exit={{ x: 50, opacity: 0 }}
            transition={{ duration: 0.3 }}
          >
            {/* –í—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ */}
            <Typography variant="h4" sx={{
              textAlign: 'center',
              fontWeight: 800,
              background: 'linear-gradient(135deg, #1565c0 0%, #42a5f5 100%)',
              backgroundClip: 'text',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
              mb: 4
            }}>
              üëî –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é
            </Typography>

            <Grid container spacing={3}>
              {professions.map((profession, index) => (
                <Grid item xs={12} md={6} lg={4} key={profession.id}>
                  <motion.div
                    initial={{ scale: 0.8, opacity: 0 }}
                    animate={{ scale: 1, opacity: 1 }}
                    transition={{ duration: 0.4, delay: index * 0.1 }}
                  >
                    <Card
                      elevation={8}
                      sx={{
                        height: '100%',
                        borderRadius: 3,
                        background: 'rgba(255, 255, 255, 0.95)',
                        backdropFilter: 'blur(10px)',
                        border: selectedProfession?.id === profession.id 
                          ? `3px solid ${profession.color}` 
                          : '1px solid rgba(255, 255, 255, 0.2)',
                        cursor: 'pointer',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-8px)',
                          boxShadow: '0 20px 40px rgba(0, 0, 0, 0.15)'
                        }
                      }}
                      onClick={() => handleProfessionSelect(profession)}
                    >
                      <CardContent sx={{ p: 3 }}>
                        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                          <Avatar
                            sx={{
                              bgcolor: profession.color,
                              width: 50,
                              height: 50,
                              mr: 2
                            }}
                          >
                            <profession.icon />
                          </Avatar>
                          <Box sx={{ flex: 1 }}>
                            <Typography variant="h6" sx={{ fontWeight: 600, color: '#1565c0' }}>
                              {profession.name}
                            </Typography>
                            <Typography variant="body2" color="text.secondary">
                              {profession.description}
                            </Typography>
                          </Box>
                          {selectedProfession?.id === profession.id && (
                            <Box sx={{
                              width: 30,
                              height: 30,
                              borderRadius: '50%',
                              bgcolor: '#4caf50',
                              display: 'flex',
                              alignItems: 'center',
                              justifyContent: 'center',
                              color: 'white'
                            }}>
                              <CheckIcon />
                            </Box>
                          )}
                        </Box>

                        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                        <Box sx={{ mb: 3 }}>
                          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                            <Typography variant="body2" color="text.secondary">
                              –ó–∞—Ä–ø–ª–∞—Ç–∞:
                            </Typography>
                            <Typography variant="body2" sx={{ fontWeight: 600, color: '#4caf50' }}>
                              {profession.salary}
                            </Typography>
                          </Box>
                          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>
                            <Typography variant="body2" color="text.secondary">
                              –†–∏—Å–∫:
                            </Typography>
                            <Chip
                              label={profession.risk}
                              size="small"
                              sx={{
                                bgcolor: profession.risk === '–ù–∏–∑–∫–∏–π' ? '#4caf50' : 
                                         profession.risk === '–°—Ä–µ–¥–Ω–∏–π' ? '#ff9800' : '#f44336',
                                color: 'white',
                                fontWeight: 600
                              }}
                            />
                          </Box>
                        </Box>

                        {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ */}
                        <Box sx={{ mb: 2 }}>
                          <Typography variant="body2" sx={{ fontWeight: 600, color: '#4caf50', mb: 1 }}>
                            ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
                          </Typography>
                          {profession.benefits.map((benefit, idx) => (
                            <Typography key={idx} variant="caption" sx={{ display: 'block', color: '#666' }}>
                              ‚Ä¢ {benefit}
                            </Typography>
                          ))}
                        </Box>

                        <Box>
                          <Typography variant="body2" sx={{ fontWeight: 600, color: '#f44336', mb: 1 }}>
                            ‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
                          </Typography>
                          {profession.drawbacks.map((drawback, idx) => (
                            <Typography key={idx} variant="caption" sx={{ display: 'block', color: '#666' }}>
                              ‚Ä¢ {drawback}
                            </Typography>
                          ))}
                        </Box>
                      </CardContent>
                    </Card>
                  </motion.div>
                </Grid>
              ))}
            </Grid>
          </motion.div>
        ) : (
          <motion.div
            key="dreams"
            initial={{ x: -50, opacity: 0 }}
            animate={{ x: 0, opacity: 1 }}
            exit={{ x: 50, opacity: 0 }}
            transition={{ duration: 0.3 }}
          >
            {/* –í—ã–±–æ—Ä –º–µ—á—Ç—ã */}
            <Typography variant="h4" sx={{
              textAlign: 'center',
              fontWeight: 800,
              background: 'linear-gradient(135deg, #1565c0 0%, #42a5f5 100%)',
              backgroundClip: 'text',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
              mb: 4
            }}>
              üí≠ –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –º–µ—á—Ç—É
            </Typography>

            <Grid container spacing={3}>
              {dreams.map((dream, index) => (
                <Grid item xs={12} md={6} lg={4} key={dream.id}>
                  <motion.div
                    initial={{ scale: 0.8, opacity: 0 }}
                    animate={{ scale: 1, opacity: 1 }}
                    transition={{ duration: 0.4, delay: index * 0.1 }}
                  >
                    <Card
                      elevation={8}
                      sx={{
                        height: '100%',
                        borderRadius: 3,
                        background: 'rgba(255, 255, 255, 0.95)',
                        backdropFilter: 'blur(10px)',
                        border: selectedDream?.id === dream.id 
                          ? `3px solid ${dream.color}` 
                          : '1px solid rgba(255, 255, 255, 0.2)',
                        cursor: 'pointer',
                        transition: 'all 0.3s ease',
                        '&:hover': {
                          transform: 'translateY(-8px)',
                          boxShadow: '0 20px 40px rgba(0, 0, 0, 0.15)'
                        }
                      }}
                      onClick={() => handleDreamSelect(dream)}
                    >
                      <CardContent sx={{ p: 3, textAlign: 'center' }}>
                        {/* –ò–∫–æ–Ω–∫–∞ –º–µ—á—Ç—ã */}
                        <Typography variant="h1" sx={{ mb: 2 }}>
                          {dream.icon}
                        </Typography>

                        {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ */}
                        <Typography variant="h6" sx={{ fontWeight: 600, color: '#1565c0', mb: 1 }}>
                          {dream.name}
                        </Typography>
                        <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
                          {dream.description}
                        </Typography>

                        {/* –°—Ç–æ–∏–º–æ—Å—Ç—å */}
                        <Box sx={{
                          bgcolor: dream.color,
                          color: 'white',
                          p: 2,
                          borderRadius: 2,
                          mb: 2
                        }}>
                          <Typography variant="body2" sx={{ fontWeight: 600 }}>
                            üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {dream.cost}
                          </Typography>
                        </Box>

                        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤—ã–±–æ—Ä–∞ */}
                        {selectedDream?.id === dream.id && (
                          <Box sx={{
                            width: 40,
                            height: 40,
                            borderRadius: '50%',
                            bgcolor: '#4caf50',
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'center',
                            color: 'white',
                            mx: 'auto'
                          }}>
                            <CheckIcon />
                          </Box>
                        )}
                      </CardContent>
                    </Card>
                  </motion.div>
                </Grid>
              ))}
            </Grid>
          </motion.div>
        )}
      </AnimatePresence>

      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <Box sx={{ display: 'flex', justifyContent: 'center', gap: 3, mt: 6 }}>
        {step === 2 && (
          <Button
            variant="outlined"
            size="large"
            onClick={handleBack}
            startIcon={<ArrowIcon sx={{ transform: 'rotate(180deg)' }} />}
            sx={{
              borderRadius: 3,
              px: 4,
              py: 1.5,
              fontSize: '1.1rem',
              fontWeight: 600,
              borderColor: '#1976d2',
              color: '#1976d2',
              '&:hover': {
                borderColor: '#1565c0',
                bgcolor: 'rgba(25, 118, 210, 0.08)'
              }
            }}
          >
            –ù–∞–∑–∞–¥
          </Button>
        )}

        <Button
          variant="contained"
          size="large"
          onClick={handleNext}
          disabled={!canProceed}
          endIcon={step === 1 ? <ArrowIcon /> : <CheckIcon />}
          sx={{
            borderRadius: 3,
            px: 4,
            py: 1.5,
            fontSize: '1.1rem',
            fontWeight: 600,
            background: 'linear-gradient(135deg, #4caf50 0%, #66bb6a 100%)',
            '&:hover': {
              background: 'linear-gradient(135deg, #45a049 0%, #4caf50 100%)',
              transform: 'translateY(-2px)',
              boxShadow: '0 8px 25px rgba(76, 175, 80, 0.3)'
            },
            '&:disabled': {
              background: '#ccc',
              transform: 'none',
              boxShadow: 'none'
            },
            transition: 'all 0.3s ease'
          }}
        >
          {step === 1 ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä'}
        </Button>
      </Box>

      {/* –í—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ */}
      {(selectedProfession || selectedDream) && (
        <Paper elevation={8} sx={{
          p: 3,
          mt: 4,
          borderRadius: 3,
          background: 'rgba(255, 255, 255, 0.95)',
          backdropFilter: 'blur(10px)'
        }}>
          <Typography variant="h6" sx={{ mb: 2, color: '#1976d2', textAlign: 'center' }}>
            üéØ –í–∞—à –≤—ã–±–æ—Ä:
          </Typography>
          
          <Grid container spacing={3}>
            {selectedProfession && (
              <Grid item xs={12} md={6}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                  <Avatar sx={{ bgcolor: selectedProfession.color }}>
                    <selectedProfession.icon />
                  </Avatar>
                  <Box>
                    <Typography variant="subtitle1" sx={{ fontWeight: 600 }}>
                      –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {selectedProfession.name}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      {selectedProfession.description}
                    </Typography>
                  </Box>
                </Box>
              </Grid>
            )}
            
            {selectedDream && (
              <Grid item xs={12} md={6}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                  <Typography variant="h4">
                    {selectedDream.icon}
                  </Typography>
                  <Box>
                    <Typography variant="subtitle1" sx={{ fontWeight: 600 }}>
                      –ú–µ—á—Ç–∞: {selectedDream.name}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      {selectedDream.description}
                    </Typography>
                  </Box>
                </Box>
              </Grid>
            )}
          </Grid>
        </Paper>
      )}
    </Box>
  );
};

export default ProfessionSelection;
