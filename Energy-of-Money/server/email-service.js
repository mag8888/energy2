const nodemailer = require('nodemailer');
const { getEmailConfig } = require('./email-config');

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
function createTransporter() {
  const config = getEmailConfig();
  
  // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    console.log('üìß [EMAIL] Creating test transporter (emails will not be sent)');
    return {
      sendMail: (options) => {
        console.log('üìß [EMAIL] TEST MODE - Email would be sent:');
        console.log('üìß [EMAIL] To:', options.to);
        console.log('üìß [EMAIL] Subject:', options.subject);
        console.log('üìß [EMAIL] Text:', options.text);
        console.log('üìß [EMAIL] HTML:', options.html);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        return Promise.resolve({
          messageId: 'test-message-id',
          response: 'Test mode - email not sent'
        });
      }
    };
  }
  
  return nodemailer.createTransporter(config);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ø–∞—Ä–æ–ª—è
async function sendPasswordResetEmail(email, username, newPassword) {
  try {
    const transporter = createTransporter();
    
    const mailOptions = {
      from: process.env.EMAIL_USER || 'noreply@energymoney.com',
      to: email,
      subject: 'üîê –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - Energy of Money',
      text: `
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${username}!

–í–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –∏–≥—Ä—ã "Energy of Money": ${newPassword}

–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Energy of Money
      `,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
          <div style="background-color: #4CAF50; color: white; padding: 20px; text-align: center; border-radius: 10px 10px 0 0;">
            <h1 style="margin: 0; font-size: 24px;">üîê –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h1>
            <p style="margin: 10px 0 0 0; font-size: 16px;">Energy of Money</p>
          </div>
          
          <div style="background-color: white; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <h2 style="color: #333; margin-bottom: 20px;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${username}!</h2>
            
            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.
            </p>
            
            <div style="background-color: #f0f8ff; border: 2px solid #4CAF50; border-radius: 8px; padding: 20px; margin: 20px 0; text-align: center;">
              <p style="margin: 0; font-size: 18px; color: #333; font-weight: bold;">
                –í–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:
              </p>
              <p style="margin: 10px 0 0 0; font-size: 24px; color: #4CAF50; font-weight: bold; letter-spacing: 2px;">
                ${newPassword}
              </p>
            </div>
            
            <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px; padding: 15px; margin: 20px 0;">
              <p style="margin: 0; color: #856404; font-size: 14px;">
                ‚ö†Ô∏è <strong>–í–∞–∂–Ω–æ:</strong> –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
              </p>
            </div>
            
            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.
            </p>
            
            <div style="text-align: center; margin-top: 30px;">
              <a href="http://localhost:3000" style="background-color: #4CAF50; color: white; padding: 12px 30px; text-decoration: none; border-radius: 25px; font-weight: bold; display: inline-block;">
                –í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É
              </a>
            </div>
            
            <hr style="border: none; border-top: 1px solid #eee; margin: 30px 0;">
            
            <p style="color: #999; font-size: 12px; text-align: center; margin: 0;">
              –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
              –ö–æ–º–∞–Ω–¥–∞ Energy of Money
            </p>
          </div>
        </div>
      `
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ [EMAIL] Password reset email sent successfully to ${email}`);
    console.log(`‚úÖ [EMAIL] Message ID: ${result.messageId}`);
    
    return { success: true, messageId: result.messageId };
    
  } catch (error) {
    console.error(`‚ùå [EMAIL] Error sending password reset email to ${email}:`, error);
    return { success: false, error: error.message };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
function generateRandomPassword(length = 8) {
  const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  let password = '';
  
  for (let i = 0; i < length; i++) {
    const randomIndex = Math.floor(Math.random() * charset.length);
    password += charset[randomIndex];
  }
  
  return password;
}

module.exports = {
  sendPasswordResetEmail,
  generateRandomPassword,
  createTransporter
};

