#!/usr/bin/env node

console.log('üß™ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞: –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞');
console.log('=================================================================\n');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É —Ä–µ–π—Ç–∏–Ω–≥–∞
function testRatingLogic() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞...\n');
  
  const testCases = [
    { position: 1, totalPlayers: 8, expected: 7, description: '1-–µ –º–µ—Å—Ç–æ –∏–∑ 8 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 2, totalPlayers: 8, expected: 6, description: '2-–µ –º–µ—Å—Ç–æ –∏–∑ 8 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 5, totalPlayers: 8, expected: 3, description: '5-–µ –º–µ—Å—Ç–æ –∏–∑ 8 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 8, totalPlayers: 8, expected: 0, description: '8-–µ –º–µ—Å—Ç–æ –∏–∑ 8 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 1, totalPlayers: 4, expected: 3, description: '1-–µ –º–µ—Å—Ç–æ –∏–∑ 4 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 3, totalPlayers: 4, expected: 1, description: '3-–µ –º–µ—Å—Ç–æ –∏–∑ 4 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 1, totalPlayers: 2, expected: 1, description: '1-–µ –º–µ—Å—Ç–æ –∏–∑ 2 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 2, totalPlayers: 2, expected: 0, description: '2-–µ –º–µ—Å—Ç–æ –∏–∑ 2 –∏–≥—Ä–æ–∫–æ–≤' }
  ];
  
  let passedTests = 0;
  let totalTests = testCases.length;
  
  testCases.forEach((testCase, index) => {
    const { position, totalPlayers, expected, description } = testCase;
    const actual = totalPlayers - position;
    const passed = actual === expected;
    
    if (passed) {
      passedTests++;
      console.log(`‚úÖ –¢–µ—Å—Ç ${index + 1}: ${description}`);
      console.log(`   –ü–æ–∑–∏—Ü–∏—è: ${position}, –ò–≥—Ä–æ–∫–æ–≤: ${totalPlayers} ‚Üí –û—á–∫–∏: ${actual}`);
    } else {
      console.log(`‚ùå –¢–µ—Å—Ç ${index + 1}: ${description}`);
      console.log(`   –ü–æ–∑–∏—Ü–∏—è: ${position}, –ò–≥—Ä–æ–∫–æ–≤: ${totalPlayers} ‚Üí –û–∂–∏–¥–∞–ª–æ—Å—å: ${expected}, –ü–æ–ª—É—á–µ–Ω–æ: ${actual}`);
    }
    console.log('');
  });
  
  console.log(`üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:`);
  console.log(`==================================================`);
  console.log(`–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${passedTests}/${totalTests}`);
  
  if (passedTests === totalTests) {
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('\nüí° –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:');
    console.log('   - 1-–µ –º–µ—Å—Ç–æ –≤ –∏–≥—Ä–µ —Å 8 –∏–≥—Ä–æ–∫–∞–º–∏ = +7 –æ—á–∫–æ–≤');
    console.log('   - 5-–µ –º–µ—Å—Ç–æ –≤ –∏–≥—Ä–µ —Å 8 –∏–≥—Ä–æ–∫–∞–º–∏ = +3 –æ—á–∫–∞');
    console.log('   - 8-–µ –º–µ—Å—Ç–æ –≤ –∏–≥—Ä–µ —Å 8 –∏–≥—Ä–æ–∫–∞–º–∏ = +0 –æ—á–∫–æ–≤');
  } else {
    console.log('‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´');
    console.log('\nüîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã');
  }
  
  return passedTests === totalTests;
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
function testRatingUpdate() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞...\n');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º
  let player = {
    ratingPoints: 0,
    gamesPlayed: 0,
    username: 'TestPlayer'
  };
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä
  const games = [
    { position: 1, totalPlayers: 8, description: '1-–µ –º–µ—Å—Ç–æ –∏–∑ 8 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 3, totalPlayers: 6, description: '3-–µ –º–µ—Å—Ç–æ –∏–∑ 6 –∏–≥—Ä–æ–∫–æ–≤' },
    { position: 2, totalPlayers: 4, description: '2-–µ –º–µ—Å—Ç–æ –∏–∑ 4 –∏–≥—Ä–æ–∫–æ–≤' }
  ];
  
  console.log('üéÆ –°–∏–º—É–ª—è—Ü–∏—è –∏–≥—Ä:');
  games.forEach((game, index) => {
    const pointsEarned = game.totalPlayers - game.position;
    player.ratingPoints += pointsEarned;
    player.gamesPlayed += 1;
    
    console.log(`   –ò–≥—Ä–∞ ${index + 1}: ${game.description}`);
    console.log(`   –ü–æ–ª—É—á–µ–Ω–æ –æ—á–∫–æ–≤: ${pointsEarned}`);
    console.log(`   –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: ${player.ratingPoints}`);
    console.log('');
  });
  
  const expectedTotal = 7 + 3 + 2; // 7 + 3 + 2 = 12
  const passed = player.ratingPoints === expectedTotal;
  
  if (passed) {
    console.log('‚úÖ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø—Ä–æ–π–¥–µ–Ω');
    console.log(`   –û–∂–∏–¥–∞–ª–æ—Å—å: ${expectedTotal}, –ü–æ–ª—É—á–µ–Ω–æ: ${player.ratingPoints}`);
  } else {
    console.log('‚ùå –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω');
    console.log(`   –û–∂–∏–¥–∞–ª–æ—Å—å: ${expectedTotal}, –ü–æ–ª—É—á–µ–Ω–æ: ${player.ratingPoints}`);
  }
  
  return passed;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
function runAllTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...\n');
  
  const test1Passed = testRatingLogic();
  console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  
  const test2Passed = testRatingUpdate();
  console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  
  // –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log('==================================================');
  console.log(`–õ–æ–≥–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞: ${test1Passed ? '‚úÖ' : '‚ùå'}`);
  console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞: ${test2Passed ? '‚úÖ' : '‚ùå'}`);
  
  const totalPassed = (test1Passed ? 1 : 0) + (test2Passed ? 1 : 0);
  const totalTests = 2;
  
  console.log(`\nüéØ –ò–¢–û–ì–û: ${totalPassed}/${totalTests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);
  
  if (totalPassed === totalTests) {
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('\nüí° –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
    console.log('   - –†–µ–π—Ç–∏–Ω–≥ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ –Ω–∞–±—Ä–∞–Ω–Ω—ã–º –æ—á–∫–∞–º');
    console.log('   - –û—á–∫–∏ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∑–∞ –∫–∞–∂–¥–æ–≥–æ –æ–±–æ–π–¥–µ–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞');
    console.log('   - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∏');
  } else {
    console.log('\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´');
    console.log('\nüîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã');
  }
  
  process.exit(totalPassed === totalTests ? 0 : 1);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runAllTests();
