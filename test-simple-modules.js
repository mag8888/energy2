// üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –º–æ–¥—É–ª–µ–π CASHFLOW
import { readFileSync, existsSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

console.log('üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –º–æ–¥—É–ª–µ–π...');

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
const modules = ['core', 'game', 'ui', 'network', 'data', 'utils'];
let allModulesExist = true;

modules.forEach(moduleName => {
  const modulePath = join(__dirname, 'modules', moduleName);
  const indexPath = join(modulePath, 'index.js');
  
  if (existsSync(modulePath) && existsSync(indexPath)) {
    console.log(`‚úÖ ${moduleName}: OK`);
  } else {
    console.log(`‚ùå ${moduleName}: MISSING FILES`);
    allModulesExist = false;
  }
});

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
try {
  const packagePath = join(__dirname, 'package.json');
  const packageContent = readFileSync(packagePath, 'utf8');
  const packageJson = JSON.parse(packageContent);
  
  console.log(`\nüì¶ –ü—Ä–æ–µ–∫—Ç: ${packageJson.name}`);
  console.log(`üì¶ –í–µ—Ä—Å–∏—è: ${packageJson.version}`);
  console.log(`üì¶ –¢–∏–ø: ${packageJson.type || 'CommonJS'}`);
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ package.json:', error.message);
}

// –¢–µ—Å—Ç 3: –ò—Ç–æ–≥
console.log(`\nüéØ –ò–¢–û–ì: ${allModulesExist ? '–í–°–ï –ú–û–î–£–õ–ò –ì–û–¢–û–í–´' : '–ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´'}`);

if (allModulesExist) {
  console.log('üöÄ –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –º–æ–¥—É–ª—è–º–∏!');
} else {
  console.log('üîß –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã');
}
